//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: inner/types/dc_idc.proto

package com.dogu.protocol.generated.inner.types;

@kotlin.jvm.JvmName("-initializedcIdcStartStreamingResult")
inline fun dcIdcStartStreamingResult(block: com.dogu.protocol.generated.inner.types.DcIdcStartStreamingResultKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult =
  com.dogu.protocol.generated.inner.types.DcIdcStartStreamingResultKt.Dsl._create(com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult.newBuilder()).apply { block() }._build()
object DcIdcStartStreamingResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult = _builder.build()

    /**
     * <code>.outer.streaming.StreamingAnswer answer = 1;</code>
     */
    var answer: com.dogu.protocol.generated.outer.streaming.Streaming.StreamingAnswer
      @JvmName("getAnswer")
      get() = _builder.getAnswer()
      @JvmName("setAnswer")
      set(value) {
        _builder.setAnswer(value)
      }
    /**
     * <code>.outer.streaming.StreamingAnswer answer = 1;</code>
     */
    fun clearAnswer() {
      _builder.clearAnswer()
    }
    /**
     * <code>.outer.streaming.StreamingAnswer answer = 1;</code>
     * @return Whether the answer field is set.
     */
    fun hasAnswer(): kotlin.Boolean {
      return _builder.hasAnswer()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult.copy(block: com.dogu.protocol.generated.inner.types.DcIdcStartStreamingResultKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResult =
  com.dogu.protocol.generated.inner.types.DcIdcStartStreamingResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.inner.types.DcIdc.DcIdcStartStreamingResultOrBuilder.answerOrNull: com.dogu.protocol.generated.outer.streaming.Streaming.StreamingAnswer?
  get() = if (hasAnswer()) getAnswer() else null

