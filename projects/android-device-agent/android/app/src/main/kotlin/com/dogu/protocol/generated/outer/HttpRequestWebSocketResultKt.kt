//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/http_ws.proto

package com.dogu.protocol.generated.outer;

@kotlin.jvm.JvmName("-initializehttpRequestWebSocketResult")
inline fun httpRequestWebSocketResult(block: com.dogu.protocol.generated.outer.HttpRequestWebSocketResultKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult =
  com.dogu.protocol.generated.outer.HttpRequestWebSocketResultKt.Dsl._create(com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult.newBuilder()).apply { block() }._build()
object HttpRequestWebSocketResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult = _builder.build()

    /**
     * <code>sfixed32 sequence_id = 1;</code>
     */
    var sequenceId: kotlin.Int
      @JvmName("getSequenceId")
      get() = _builder.getSequenceId()
      @JvmName("setSequenceId")
      set(value) {
        _builder.setSequenceId(value)
      }
    /**
     * <code>sfixed32 sequence_id = 1;</code>
     */
    fun clearSequenceId() {
      _builder.clearSequenceId()
    }

    /**
     * <code>.outer.HttpRequestResult http_request_result = 2;</code>
     */
    var httpRequestResult: com.dogu.protocol.generated.outer.HttpWs.HttpRequestResult
      @JvmName("getHttpRequestResult")
      get() = _builder.getHttpRequestResult()
      @JvmName("setHttpRequestResult")
      set(value) {
        _builder.setHttpRequestResult(value)
      }
    /**
     * <code>.outer.HttpRequestResult http_request_result = 2;</code>
     */
    fun clearHttpRequestResult() {
      _builder.clearHttpRequestResult()
    }
    /**
     * <code>.outer.HttpRequestResult http_request_result = 2;</code>
     * @return Whether the httpRequestResult field is set.
     */
    fun hasHttpRequestResult(): kotlin.Boolean {
      return _builder.hasHttpRequestResult()
    }

    /**
     * <code>.outer.WebSocketResult web_socket_result = 3;</code>
     */
    var webSocketResult: com.dogu.protocol.generated.outer.HttpWs.WebSocketResult
      @JvmName("getWebSocketResult")
      get() = _builder.getWebSocketResult()
      @JvmName("setWebSocketResult")
      set(value) {
        _builder.setWebSocketResult(value)
      }
    /**
     * <code>.outer.WebSocketResult web_socket_result = 3;</code>
     */
    fun clearWebSocketResult() {
      _builder.clearWebSocketResult()
    }
    /**
     * <code>.outer.WebSocketResult web_socket_result = 3;</code>
     * @return Whether the webSocketResult field is set.
     */
    fun hasWebSocketResult(): kotlin.Boolean {
      return _builder.hasWebSocketResult()
    }
    val valueCase: com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult.copy(block: com.dogu.protocol.generated.outer.HttpRequestWebSocketResultKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResult =
  com.dogu.protocol.generated.outer.HttpRequestWebSocketResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResultOrBuilder.httpRequestResultOrNull: com.dogu.protocol.generated.outer.HttpWs.HttpRequestResult?
  get() = if (hasHttpRequestResult()) getHttpRequestResult() else null

val com.dogu.protocol.generated.outer.HttpWs.HttpRequestWebSocketResultOrBuilder.webSocketResultOrNull: com.dogu.protocol.generated.outer.HttpWs.WebSocketResult?
  get() = if (hasWebSocketResult()) getWebSocketResult() else null

