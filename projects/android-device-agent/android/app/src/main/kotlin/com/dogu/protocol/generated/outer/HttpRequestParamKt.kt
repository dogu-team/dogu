//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/http_ws.proto

package com.dogu.protocol.generated.outer;

@kotlin.jvm.JvmName("-initializehttpRequestParam")
inline fun httpRequestParam(block: com.dogu.protocol.generated.outer.HttpRequestParamKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam =
  com.dogu.protocol.generated.outer.HttpRequestParamKt.Dsl._create(com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam.newBuilder()).apply { block() }._build()
object HttpRequestParamKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam = _builder.build()

    /**
     * <code>sfixed32 sequence_id = 1;</code>
     */
    var sequenceId: kotlin.Int
      @JvmName("getSequenceId")
      get() = _builder.getSequenceId()
      @JvmName("setSequenceId")
      set(value) {
        _builder.setSequenceId(value)
      }
    /**
     * <code>sfixed32 sequence_id = 1;</code>
     */
    fun clearSequenceId() {
      _builder.clearSequenceId()
    }

    /**
     * <code>.outer.HttpRequest request = 2;</code>
     */
    var request: com.dogu.protocol.generated.outer.HttpWs.HttpRequest
      @JvmName("getRequest")
      get() = _builder.getRequest()
      @JvmName("setRequest")
      set(value) {
        _builder.setRequest(value)
      }
    /**
     * <code>.outer.HttpRequest request = 2;</code>
     */
    fun clearRequest() {
      _builder.clearRequest()
    }
    /**
     * <code>.outer.HttpRequest request = 2;</code>
     * @return Whether the request field is set.
     */
    fun hasRequest(): kotlin.Boolean {
      return _builder.hasRequest()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam.copy(block: com.dogu.protocol.generated.outer.HttpRequestParamKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.HttpRequestParam =
  com.dogu.protocol.generated.outer.HttpRequestParamKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.outer.HttpWs.HttpRequestParamOrBuilder.requestOrNull: com.dogu.protocol.generated.outer.HttpWs.HttpRequest?
  get() = if (hasRequest()) getRequest() else null

