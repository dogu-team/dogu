//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/http_ws.proto

package com.dogu.protocol.generated.outer;

@kotlin.jvm.JvmName("-initializewebSocketMessage")
inline fun webSocketMessage(block: com.dogu.protocol.generated.outer.WebSocketMessageKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage =
  com.dogu.protocol.generated.outer.WebSocketMessageKt.Dsl._create(com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage.newBuilder()).apply { block() }._build()
object WebSocketMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage = _builder.build()

    /**
     * <code>string string_value = 1;</code>
     */
    var stringValue: kotlin.String
      @JvmName("getStringValue")
      get() = _builder.getStringValue()
      @JvmName("setStringValue")
      set(value) {
        _builder.setStringValue(value)
      }
    /**
     * <code>string string_value = 1;</code>
     */
    fun clearStringValue() {
      _builder.clearStringValue()
    }
    /**
     * <code>string string_value = 1;</code>
     * @return Whether the stringValue field is set.
     */
    fun hasStringValue(): kotlin.Boolean {
      return _builder.hasStringValue()
    }

    /**
     * <code>bytes bytes_value = 2;</code>
     */
    var bytesValue: com.google.protobuf.ByteString
      @JvmName("getBytesValue")
      get() = _builder.getBytesValue()
      @JvmName("setBytesValue")
      set(value) {
        _builder.setBytesValue(value)
      }
    /**
     * <code>bytes bytes_value = 2;</code>
     */
    fun clearBytesValue() {
      _builder.clearBytesValue()
    }
    /**
     * <code>bytes bytes_value = 2;</code>
     * @return Whether the bytesValue field is set.
     */
    fun hasBytesValue(): kotlin.Boolean {
      return _builder.hasBytesValue()
    }

    /**
     * <code>.outer.WebSocketConnection connection = 3;</code>
     */
    var connection: com.dogu.protocol.generated.outer.HttpWs.WebSocketConnection
      @JvmName("getConnection")
      get() = _builder.getConnection()
      @JvmName("setConnection")
      set(value) {
        _builder.setConnection(value)
      }
    /**
     * <code>.outer.WebSocketConnection connection = 3;</code>
     */
    fun clearConnection() {
      _builder.clearConnection()
    }
    /**
     * <code>.outer.WebSocketConnection connection = 3;</code>
     * @return Whether the connection field is set.
     */
    fun hasConnection(): kotlin.Boolean {
      return _builder.hasConnection()
    }
    val valueCase: com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage.copy(block: com.dogu.protocol.generated.outer.WebSocketMessageKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.HttpWs.WebSocketMessage =
  com.dogu.protocol.generated.outer.WebSocketMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.outer.HttpWs.WebSocketMessageOrBuilder.connectionOrNull: com.dogu.protocol.generated.outer.HttpWs.WebSocketConnection?
  get() = if (hasConnection()) getConnection() else null

