//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: inner/types/dc_da.proto

package com.dogu.protocol.generated.inner.types;

@kotlin.jvm.JvmName("-initializedcDaGetFoldableStateReturn")
inline fun dcDaGetFoldableStateReturn(block: com.dogu.protocol.generated.inner.types.DcDaGetFoldableStateReturnKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn =
  com.dogu.protocol.generated.inner.types.DcDaGetFoldableStateReturnKt.Dsl._create(com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn.newBuilder()).apply { block() }._build()
object DcDaGetFoldableStateReturnKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn = _builder.build()

    /**
     * <code>bool is_foldable = 1;</code>
     */
    var isFoldable: kotlin.Boolean
      @JvmName("getIsFoldable")
      get() = _builder.getIsFoldable()
      @JvmName("setIsFoldable")
      set(value) {
        _builder.setIsFoldable(value)
      }
    /**
     * <code>bool is_foldable = 1;</code>
     */
    fun clearIsFoldable() {
      _builder.clearIsFoldable()
    }

    /**
     * <code>uint32 current_state = 2;</code>
     */
    var currentState: kotlin.Int
      @JvmName("getCurrentState")
      get() = _builder.getCurrentState()
      @JvmName("setCurrentState")
      set(value) {
        _builder.setCurrentState(value)
      }
    /**
     * <code>uint32 current_state = 2;</code>
     */
    fun clearCurrentState() {
      _builder.clearCurrentState()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class SupportedStatesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated uint32 supported_states = 3;</code>
     */
     val supportedStates: com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSupportedStatesList()
      )
    /**
     * <code>repeated uint32 supported_states = 3;</code>
     * @param value The supportedStates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSupportedStates")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.add(value: kotlin.Int) {
      _builder.addSupportedStates(value)
    }/**
     * <code>repeated uint32 supported_states = 3;</code>
     * @param value The supportedStates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSupportedStates")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <code>repeated uint32 supported_states = 3;</code>
     * @param values The supportedStates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSupportedStates")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllSupportedStates(values)
    }/**
     * <code>repeated uint32 supported_states = 3;</code>
     * @param values The supportedStates to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSupportedStates")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <code>repeated uint32 supported_states = 3;</code>
     * @param index The index to set the value at.
     * @param value The supportedStates to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSupportedStates")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setSupportedStates(index, value)
    }/**
     * <code>repeated uint32 supported_states = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSupportedStates")
    fun com.google.protobuf.kotlin.DslList<kotlin.Int, SupportedStatesProxy>.clear() {
      _builder.clearSupportedStates()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn.copy(block: com.dogu.protocol.generated.inner.types.DcDaGetFoldableStateReturnKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.inner.types.DcDa.DcDaGetFoldableStateReturn =
  com.dogu.protocol.generated.inner.types.DcDaGetFoldableStateReturnKt.Dsl._create(this.toBuilder()).apply { block() }._build()

