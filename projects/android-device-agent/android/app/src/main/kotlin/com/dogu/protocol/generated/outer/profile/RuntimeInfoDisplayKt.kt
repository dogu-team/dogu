//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/profile/runtime_info.proto

package com.dogu.protocol.generated.outer.profile;

@kotlin.jvm.JvmName("-initializeruntimeInfoDisplay")
inline fun runtimeInfoDisplay(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoDisplayKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoDisplayKt.Dsl._create(com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay.newBuilder()).apply { block() }._build()
object RuntimeInfoDisplayKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>bool is_screen_on = 2;</code>
     */
    var isScreenOn: kotlin.Boolean
      @JvmName("getIsScreenOn")
      get() = _builder.getIsScreenOn()
      @JvmName("setIsScreenOn")
      set(value) {
        _builder.setIsScreenOn(value)
      }
    /**
     * <code>bool is_screen_on = 2;</code>
     */
    fun clearIsScreenOn() {
      _builder.clearIsScreenOn()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay.copy(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoDisplayKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoDisplay =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoDisplayKt.Dsl._create(this.toBuilder()).apply { block() }._build()

