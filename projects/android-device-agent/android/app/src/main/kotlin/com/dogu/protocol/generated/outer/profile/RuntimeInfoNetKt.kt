//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/profile/runtime_info.proto

package com.dogu.protocol.generated.outer.profile;

@kotlin.jvm.JvmName("-initializeruntimeInfoNet")
inline fun runtimeInfoNet(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoNetKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoNetKt.Dsl._create(com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet.newBuilder()).apply { block() }._build()
object RuntimeInfoNetKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>fixed64 mobile_rxbytes = 2;</code>
     */
    var mobileRxbytes: kotlin.Long
      @JvmName("getMobileRxbytes")
      get() = _builder.getMobileRxbytes()
      @JvmName("setMobileRxbytes")
      set(value) {
        _builder.setMobileRxbytes(value)
      }
    /**
     * <code>fixed64 mobile_rxbytes = 2;</code>
     */
    fun clearMobileRxbytes() {
      _builder.clearMobileRxbytes()
    }

    /**
     * <code>fixed64 mobile_txbytes = 3;</code>
     */
    var mobileTxbytes: kotlin.Long
      @JvmName("getMobileTxbytes")
      get() = _builder.getMobileTxbytes()
      @JvmName("setMobileTxbytes")
      set(value) {
        _builder.setMobileTxbytes(value)
      }
    /**
     * <code>fixed64 mobile_txbytes = 3;</code>
     */
    fun clearMobileTxbytes() {
      _builder.clearMobileTxbytes()
    }

    /**
     * <code>fixed64 wifi_rxbytes = 4;</code>
     */
    var wifiRxbytes: kotlin.Long
      @JvmName("getWifiRxbytes")
      get() = _builder.getWifiRxbytes()
      @JvmName("setWifiRxbytes")
      set(value) {
        _builder.setWifiRxbytes(value)
      }
    /**
     * <code>fixed64 wifi_rxbytes = 4;</code>
     */
    fun clearWifiRxbytes() {
      _builder.clearWifiRxbytes()
    }

    /**
     * <code>fixed64 wifi_txbytes = 5;</code>
     */
    var wifiTxbytes: kotlin.Long
      @JvmName("getWifiTxbytes")
      get() = _builder.getWifiTxbytes()
      @JvmName("setWifiTxbytes")
      set(value) {
        _builder.setWifiTxbytes(value)
      }
    /**
     * <code>fixed64 wifi_txbytes = 5;</code>
     */
    fun clearWifiTxbytes() {
      _builder.clearWifiTxbytes()
    }

    /**
     * <code>fixed64 total_rxbytes = 6;</code>
     */
    var totalRxbytes: kotlin.Long
      @JvmName("getTotalRxbytes")
      get() = _builder.getTotalRxbytes()
      @JvmName("setTotalRxbytes")
      set(value) {
        _builder.setTotalRxbytes(value)
      }
    /**
     * <code>fixed64 total_rxbytes = 6;</code>
     */
    fun clearTotalRxbytes() {
      _builder.clearTotalRxbytes()
    }

    /**
     * <code>fixed64 total_txbytes = 7;</code>
     */
    var totalTxbytes: kotlin.Long
      @JvmName("getTotalTxbytes")
      get() = _builder.getTotalTxbytes()
      @JvmName("setTotalTxbytes")
      set(value) {
        _builder.setTotalTxbytes(value)
      }
    /**
     * <code>fixed64 total_txbytes = 7;</code>
     */
    fun clearTotalTxbytes() {
      _builder.clearTotalTxbytes()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet.copy(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoNetKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoNet =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoNetKt.Dsl._create(this.toBuilder()).apply { block() }._build()

