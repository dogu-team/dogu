//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/device_server.proto

package com.dogu.protocol.generated.outer;

@kotlin.jvm.JvmName("-initializedeviceHostUploadFileReceiveMessage")
inline fun deviceHostUploadFileReceiveMessage(block: com.dogu.protocol.generated.outer.DeviceHostUploadFileReceiveMessageKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage =
  com.dogu.protocol.generated.outer.DeviceHostUploadFileReceiveMessageKt.Dsl._create(com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage.newBuilder()).apply { block() }._build()
object DeviceHostUploadFileReceiveMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage = _builder.build()

    /**
     * <code>.outer.DeviceHostUploadFileInProgressReceiveValue in_progress = 1;</code>
     */
    var inProgress: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileInProgressReceiveValue
      @JvmName("getInProgress")
      get() = _builder.getInProgress()
      @JvmName("setInProgress")
      set(value) {
        _builder.setInProgress(value)
      }
    /**
     * <code>.outer.DeviceHostUploadFileInProgressReceiveValue in_progress = 1;</code>
     */
    fun clearInProgress() {
      _builder.clearInProgress()
    }
    /**
     * <code>.outer.DeviceHostUploadFileInProgressReceiveValue in_progress = 1;</code>
     * @return Whether the inProgress field is set.
     */
    fun hasInProgress(): kotlin.Boolean {
      return _builder.hasInProgress()
    }

    /**
     * <code>.outer.DeviceHostUploadFileCompleteReceiveValue complete = 2;</code>
     */
    var complete: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileCompleteReceiveValue
      @JvmName("getComplete")
      get() = _builder.getComplete()
      @JvmName("setComplete")
      set(value) {
        _builder.setComplete(value)
      }
    /**
     * <code>.outer.DeviceHostUploadFileCompleteReceiveValue complete = 2;</code>
     */
    fun clearComplete() {
      _builder.clearComplete()
    }
    /**
     * <code>.outer.DeviceHostUploadFileCompleteReceiveValue complete = 2;</code>
     * @return Whether the complete field is set.
     */
    fun hasComplete(): kotlin.Boolean {
      return _builder.hasComplete()
    }
    val valueCase: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage.copy(block: com.dogu.protocol.generated.outer.DeviceHostUploadFileReceiveMessageKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessage =
  com.dogu.protocol.generated.outer.DeviceHostUploadFileReceiveMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessageOrBuilder.inProgressOrNull: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileInProgressReceiveValue?
  get() = if (hasInProgress()) getInProgress() else null

val com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileReceiveMessageOrBuilder.completeOrNull: com.dogu.protocol.generated.outer.DeviceServer.DeviceHostUploadFileCompleteReceiveValue?
  get() = if (hasComplete()) getComplete() else null

