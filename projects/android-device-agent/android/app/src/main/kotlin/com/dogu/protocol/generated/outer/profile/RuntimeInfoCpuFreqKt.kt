//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/profile/runtime_info.proto

package com.dogu.protocol.generated.outer.profile;

@kotlin.jvm.JvmName("-initializeruntimeInfoCpuFreq")
inline fun runtimeInfoCpuFreq(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoCpuFreqKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoCpuFreqKt.Dsl._create(com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq.newBuilder()).apply { block() }._build()
object RuntimeInfoCpuFreqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq = _builder.build()

    /**
     * <code>fixed32 idx = 1;</code>
     */
    var idx: kotlin.Int
      @JvmName("getIdx")
      get() = _builder.getIdx()
      @JvmName("setIdx")
      set(value) {
        _builder.setIdx(value)
      }
    /**
     * <code>fixed32 idx = 1;</code>
     */
    fun clearIdx() {
      _builder.clearIdx()
    }

    /**
     * <code>fixed64 min = 2;</code>
     */
    var min: kotlin.Long
      @JvmName("getMin")
      get() = _builder.getMin()
      @JvmName("setMin")
      set(value) {
        _builder.setMin(value)
      }
    /**
     * <code>fixed64 min = 2;</code>
     */
    fun clearMin() {
      _builder.clearMin()
    }

    /**
     * <code>fixed64 cur = 3;</code>
     */
    var cur: kotlin.Long
      @JvmName("getCur")
      get() = _builder.getCur()
      @JvmName("setCur")
      set(value) {
        _builder.setCur(value)
      }
    /**
     * <code>fixed64 cur = 3;</code>
     */
    fun clearCur() {
      _builder.clearCur()
    }

    /**
     * <code>fixed64 max = 4;</code>
     */
    var max: kotlin.Long
      @JvmName("getMax")
      get() = _builder.getMax()
      @JvmName("setMax")
      set(value) {
        _builder.setMax(value)
      }
    /**
     * <code>fixed64 max = 4;</code>
     */
    fun clearMax() {
      _builder.clearMax()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq.copy(block: com.dogu.protocol.generated.outer.profile.RuntimeInfoCpuFreqKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.RuntimeInfoOuterClass.RuntimeInfoCpuFreq =
  com.dogu.protocol.generated.outer.profile.RuntimeInfoCpuFreqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

