//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: outer/profile/profile_method.proto

package com.dogu.protocol.generated.outer.profile;

@kotlin.jvm.JvmName("-initializeprofileMethodWithConfig")
inline fun profileMethodWithConfig(block: com.dogu.protocol.generated.outer.profile.ProfileMethodWithConfigKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig =
  com.dogu.protocol.generated.outer.profile.ProfileMethodWithConfigKt.Dsl._create(com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig.newBuilder()).apply { block() }._build()
object ProfileMethodWithConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig = _builder.build()

    /**
     * <code>.outer.profile.ProfileMethod profile_method = 1;</code>
     */
    var profileMethod: com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethod
      @JvmName("getProfileMethod")
      get() = _builder.getProfileMethod()
      @JvmName("setProfileMethod")
      set(value) {
        _builder.setProfileMethod(value)
      }
    /**
     * <code>.outer.profile.ProfileMethod profile_method = 1;</code>
     */
    fun clearProfileMethod() {
      _builder.clearProfileMethod()
    }
    /**
     * <code>.outer.profile.ProfileMethod profile_method = 1;</code>
     * @return Whether the profileMethod field is set.
     */
    fun hasProfileMethod(): kotlin.Boolean {
      return _builder.hasProfileMethod()
    }

    /**
     * <code>fixed32 period_sec = 2;</code>
     */
    var periodSec: kotlin.Int
      @JvmName("getPeriodSec")
      get() = _builder.getPeriodSec()
      @JvmName("setPeriodSec")
      set(value) {
        _builder.setPeriodSec(value)
      }
    /**
     * <code>fixed32 period_sec = 2;</code>
     */
    fun clearPeriodSec() {
      _builder.clearPeriodSec()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig.copy(block: com.dogu.protocol.generated.outer.profile.ProfileMethodWithConfigKt.Dsl.() -> kotlin.Unit): com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfig =
  com.dogu.protocol.generated.outer.profile.ProfileMethodWithConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethodWithConfigOrBuilder.profileMethodOrNull: com.dogu.protocol.generated.outer.profile.ProfileMethodOuterClass.ProfileMethod?
  get() = if (hasProfileMethod()) getProfileMethod() else null

