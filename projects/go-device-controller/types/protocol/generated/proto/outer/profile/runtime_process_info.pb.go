// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: outer/profile/runtime_process_info.proto

package profile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeProcessInfoCpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percent float32 `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *RuntimeProcessInfoCpu) Reset() {
	*x = RuntimeProcessInfoCpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_process_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeProcessInfoCpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeProcessInfoCpu) ProtoMessage() {}

func (x *RuntimeProcessInfoCpu) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_process_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeProcessInfoCpu.ProtoReflect.Descriptor instead.
func (*RuntimeProcessInfoCpu) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_process_info_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeProcessInfoCpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeProcessInfoCpu) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type RuntimeProcessInfoMem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percent float32 `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *RuntimeProcessInfoMem) Reset() {
	*x = RuntimeProcessInfoMem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_process_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeProcessInfoMem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeProcessInfoMem) ProtoMessage() {}

func (x *RuntimeProcessInfoMem) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_process_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeProcessInfoMem.ProtoReflect.Descriptor instead.
func (*RuntimeProcessInfoMem) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_process_info_proto_rawDescGZIP(), []int{1}
}

func (x *RuntimeProcessInfoMem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeProcessInfoMem) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type RuntimeProcessInfoFs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WriteBytes uint64 `protobuf:"fixed64,2,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	ReadBytes  uint64 `protobuf:"fixed64,3,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
}

func (x *RuntimeProcessInfoFs) Reset() {
	*x = RuntimeProcessInfoFs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_process_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeProcessInfoFs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeProcessInfoFs) ProtoMessage() {}

func (x *RuntimeProcessInfoFs) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_process_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeProcessInfoFs.ProtoReflect.Descriptor instead.
func (*RuntimeProcessInfoFs) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_process_info_proto_rawDescGZIP(), []int{2}
}

func (x *RuntimeProcessInfoFs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeProcessInfoFs) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *RuntimeProcessInfoFs) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

type RuntimeProcessInfoNet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SendBytes uint64 `protobuf:"fixed64,2,opt,name=send_bytes,json=sendBytes,proto3" json:"send_bytes,omitempty"`
	ReadBytes uint64 `protobuf:"fixed64,3,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
}

func (x *RuntimeProcessInfoNet) Reset() {
	*x = RuntimeProcessInfoNet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_process_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeProcessInfoNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeProcessInfoNet) ProtoMessage() {}

func (x *RuntimeProcessInfoNet) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_process_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeProcessInfoNet.ProtoReflect.Descriptor instead.
func (*RuntimeProcessInfoNet) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_process_info_proto_rawDescGZIP(), []int{3}
}

func (x *RuntimeProcessInfoNet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeProcessInfoNet) GetSendBytes() uint64 {
	if x != nil {
		return x.SendBytes
	}
	return 0
}

func (x *RuntimeProcessInfoNet) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

type RuntimeProcessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pid          uint32                   `protobuf:"fixed32,2,opt,name=pid,proto3" json:"pid,omitempty"`
	IsForeground bool                     `protobuf:"varint,3,opt,name=is_foreground,json=isForeground,proto3" json:"is_foreground,omitempty"`
	Cpues        []*RuntimeProcessInfoCpu `protobuf:"bytes,5,rep,name=cpues,proto3" json:"cpues,omitempty"`
	Mems         []*RuntimeProcessInfoMem `protobuf:"bytes,6,rep,name=mems,proto3" json:"mems,omitempty"`
	Fses         []*RuntimeProcessInfoFs  `protobuf:"bytes,7,rep,name=fses,proto3" json:"fses,omitempty"`
	Nets         []*RuntimeProcessInfoNet `protobuf:"bytes,8,rep,name=nets,proto3" json:"nets,omitempty"`
}

func (x *RuntimeProcessInfo) Reset() {
	*x = RuntimeProcessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_process_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeProcessInfo) ProtoMessage() {}

func (x *RuntimeProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_process_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeProcessInfo.ProtoReflect.Descriptor instead.
func (*RuntimeProcessInfo) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_process_info_proto_rawDescGZIP(), []int{4}
}

func (x *RuntimeProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeProcessInfo) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RuntimeProcessInfo) GetIsForeground() bool {
	if x != nil {
		return x.IsForeground
	}
	return false
}

func (x *RuntimeProcessInfo) GetCpues() []*RuntimeProcessInfoCpu {
	if x != nil {
		return x.Cpues
	}
	return nil
}

func (x *RuntimeProcessInfo) GetMems() []*RuntimeProcessInfoMem {
	if x != nil {
		return x.Mems
	}
	return nil
}

func (x *RuntimeProcessInfo) GetFses() []*RuntimeProcessInfoFs {
	if x != nil {
		return x.Fses
	}
	return nil
}

func (x *RuntimeProcessInfo) GetNets() []*RuntimeProcessInfoNet {
	if x != nil {
		return x.Nets
	}
	return nil
}

var File_outer_profile_runtime_process_info_proto protoreflect.FileDescriptor

var file_outer_profile_runtime_process_info_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x70, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x22, 0x45, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xc8,
	0x02, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x3a, 0x0a, 0x05, 0x63, 0x70, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x70, 0x75, 0x52, 0x05, 0x63, 0x70, 0x75, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04,
	0x6d, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d,
	0x52, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x66, 0x73, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x73, 0x52, 0x04, 0x66, 0x73, 0x65, 0x73, 0x12,
	0x38, 0x0a, 0x04, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x65, 0x74, 0x52, 0x04, 0x6e, 0x65, 0x74, 0x73, 0x42, 0x6e, 0x0a, 0x29, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5a, 0x41, 0x67, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_outer_profile_runtime_process_info_proto_rawDescOnce sync.Once
	file_outer_profile_runtime_process_info_proto_rawDescData = file_outer_profile_runtime_process_info_proto_rawDesc
)

func file_outer_profile_runtime_process_info_proto_rawDescGZIP() []byte {
	file_outer_profile_runtime_process_info_proto_rawDescOnce.Do(func() {
		file_outer_profile_runtime_process_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_outer_profile_runtime_process_info_proto_rawDescData)
	})
	return file_outer_profile_runtime_process_info_proto_rawDescData
}

var file_outer_profile_runtime_process_info_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_outer_profile_runtime_process_info_proto_goTypes = []interface{}{
	(*RuntimeProcessInfoCpu)(nil), // 0: outer.profile.RuntimeProcessInfoCpu
	(*RuntimeProcessInfoMem)(nil), // 1: outer.profile.RuntimeProcessInfoMem
	(*RuntimeProcessInfoFs)(nil),  // 2: outer.profile.RuntimeProcessInfoFs
	(*RuntimeProcessInfoNet)(nil), // 3: outer.profile.RuntimeProcessInfoNet
	(*RuntimeProcessInfo)(nil),    // 4: outer.profile.RuntimeProcessInfo
}
var file_outer_profile_runtime_process_info_proto_depIdxs = []int32{
	0, // 0: outer.profile.RuntimeProcessInfo.cpues:type_name -> outer.profile.RuntimeProcessInfoCpu
	1, // 1: outer.profile.RuntimeProcessInfo.mems:type_name -> outer.profile.RuntimeProcessInfoMem
	2, // 2: outer.profile.RuntimeProcessInfo.fses:type_name -> outer.profile.RuntimeProcessInfoFs
	3, // 3: outer.profile.RuntimeProcessInfo.nets:type_name -> outer.profile.RuntimeProcessInfoNet
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_outer_profile_runtime_process_info_proto_init() }
func file_outer_profile_runtime_process_info_proto_init() {
	if File_outer_profile_runtime_process_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_outer_profile_runtime_process_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeProcessInfoCpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_process_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeProcessInfoMem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_process_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeProcessInfoFs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_process_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeProcessInfoNet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_process_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeProcessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outer_profile_runtime_process_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outer_profile_runtime_process_info_proto_goTypes,
		DependencyIndexes: file_outer_profile_runtime_process_info_proto_depIdxs,
		MessageInfos:      file_outer_profile_runtime_process_info_proto_msgTypes,
	}.Build()
	File_outer_profile_runtime_process_info_proto = out.File
	file_outer_profile_runtime_process_info_proto_rawDesc = nil
	file_outer_profile_runtime_process_info_proto_goTypes = nil
	file_outer_profile_runtime_process_info_proto_depIdxs = nil
}
