// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: outer/profile/runtime_info.proto

package profile

import (
	outer "go-device-controller/types/protocol/generated/proto/outer"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeInfoCpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CurrentLoad       uint64 `protobuf:"fixed64,2,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	CurrentLoadUser   uint64 `protobuf:"fixed64,3,opt,name=current_load_user,json=currentLoadUser,proto3" json:"current_load_user,omitempty"`
	CurrentLoadSystem uint64 `protobuf:"fixed64,4,opt,name=current_load_system,json=currentLoadSystem,proto3" json:"current_load_system,omitempty"`
	CurrentLoadNice   uint64 `protobuf:"fixed64,5,opt,name=current_load_nice,json=currentLoadNice,proto3" json:"current_load_nice,omitempty"`
	CurrentLoadIdle   uint64 `protobuf:"fixed64,6,opt,name=current_load_idle,json=currentLoadIdle,proto3" json:"current_load_idle,omitempty"`
	CurrentLoadIrq    uint64 `protobuf:"fixed64,7,opt,name=current_load_irq,json=currentLoadIrq,proto3" json:"current_load_irq,omitempty"`
	CurrentLoadCpu    uint64 `protobuf:"fixed64,8,opt,name=current_load_cpu,json=currentLoadCpu,proto3" json:"current_load_cpu,omitempty"`
}

func (x *RuntimeInfoCpu) Reset() {
	*x = RuntimeInfoCpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoCpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoCpu) ProtoMessage() {}

func (x *RuntimeInfoCpu) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoCpu.ProtoReflect.Descriptor instead.
func (*RuntimeInfoCpu) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeInfoCpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoCpu) GetCurrentLoad() uint64 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadUser() uint64 {
	if x != nil {
		return x.CurrentLoadUser
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadSystem() uint64 {
	if x != nil {
		return x.CurrentLoadSystem
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadNice() uint64 {
	if x != nil {
		return x.CurrentLoadNice
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadIdle() uint64 {
	if x != nil {
		return x.CurrentLoadIdle
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadIrq() uint64 {
	if x != nil {
		return x.CurrentLoadIrq
	}
	return 0
}

func (x *RuntimeInfoCpu) GetCurrentLoadCpu() uint64 {
	if x != nil {
		return x.CurrentLoadCpu
	}
	return 0
}

type RuntimeInfoCpuFreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx uint32 `protobuf:"fixed32,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Min uint64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
	Cur uint64 `protobuf:"fixed64,3,opt,name=cur,proto3" json:"cur,omitempty"`
	Max uint64 `protobuf:"fixed64,4,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *RuntimeInfoCpuFreq) Reset() {
	*x = RuntimeInfoCpuFreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoCpuFreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoCpuFreq) ProtoMessage() {}

func (x *RuntimeInfoCpuFreq) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoCpuFreq.ProtoReflect.Descriptor instead.
func (*RuntimeInfoCpuFreq) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{1}
}

func (x *RuntimeInfoCpuFreq) GetIdx() uint32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *RuntimeInfoCpuFreq) GetMin() uint64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *RuntimeInfoCpuFreq) GetCur() uint64 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *RuntimeInfoCpuFreq) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type RuntimeInfoGpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *RuntimeInfoGpu) Reset() {
	*x = RuntimeInfoGpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoGpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoGpu) ProtoMessage() {}

func (x *RuntimeInfoGpu) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoGpu.ProtoReflect.Descriptor instead.
func (*RuntimeInfoGpu) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{2}
}

func (x *RuntimeInfoGpu) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type RuntimeInfoMem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Total     uint64 `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`
	Free      uint64 `protobuf:"fixed64,3,opt,name=free,proto3" json:"free,omitempty"`
	Used      uint64 `protobuf:"fixed64,4,opt,name=used,proto3" json:"used,omitempty"`
	Active    uint64 `protobuf:"fixed64,5,opt,name=active,proto3" json:"active,omitempty"`
	Available uint64 `protobuf:"fixed64,6,opt,name=available,proto3" json:"available,omitempty"`
	Swaptotal uint64 `protobuf:"fixed64,7,opt,name=swaptotal,proto3" json:"swaptotal,omitempty"`
	Swapused  uint64 `protobuf:"fixed64,8,opt,name=swapused,proto3" json:"swapused,omitempty"`
	Swapfree  uint64 `protobuf:"fixed64,9,opt,name=swapfree,proto3" json:"swapfree,omitempty"`
	IsLow     bool   `protobuf:"varint,10,opt,name=is_low,json=isLow,proto3" json:"is_low,omitempty"`
}

func (x *RuntimeInfoMem) Reset() {
	*x = RuntimeInfoMem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoMem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoMem) ProtoMessage() {}

func (x *RuntimeInfoMem) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoMem.ProtoReflect.Descriptor instead.
func (*RuntimeInfoMem) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{3}
}

func (x *RuntimeInfoMem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoMem) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RuntimeInfoMem) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *RuntimeInfoMem) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *RuntimeInfoMem) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *RuntimeInfoMem) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *RuntimeInfoMem) GetSwaptotal() uint64 {
	if x != nil {
		return x.Swaptotal
	}
	return 0
}

func (x *RuntimeInfoMem) GetSwapused() uint64 {
	if x != nil {
		return x.Swapused
	}
	return 0
}

func (x *RuntimeInfoMem) GetSwapfree() uint64 {
	if x != nil {
		return x.Swapfree
	}
	return 0
}

func (x *RuntimeInfoMem) GetIsLow() bool {
	if x != nil {
		return x.IsLow
	}
	return false
}

type RuntimeInfoFs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type             string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Mount            string `protobuf:"bytes,3,opt,name=mount,proto3" json:"mount,omitempty"`
	Size             uint64 `protobuf:"fixed64,4,opt,name=size,proto3" json:"size,omitempty"`
	Used             uint64 `protobuf:"fixed64,5,opt,name=used,proto3" json:"used,omitempty"`
	Available        uint64 `protobuf:"fixed64,6,opt,name=available,proto3" json:"available,omitempty"`
	Use              uint64 `protobuf:"fixed64,7,opt,name=use,proto3" json:"use,omitempty"`
	ReadsCompleted   uint64 `protobuf:"fixed64,8,opt,name=reads_completed,json=readsCompleted,proto3" json:"reads_completed,omitempty"`
	TimeSpentReadMs  uint64 `protobuf:"fixed64,9,opt,name=time_spent_read_ms,json=timeSpentReadMs,proto3" json:"time_spent_read_ms,omitempty"`
	WritesCompleted  uint64 `protobuf:"fixed64,10,opt,name=writes_completed,json=writesCompleted,proto3" json:"writes_completed,omitempty"`
	TimeSpentWriteMs uint64 `protobuf:"fixed64,11,opt,name=time_spent_write_ms,json=timeSpentWriteMs,proto3" json:"time_spent_write_ms,omitempty"`
}

func (x *RuntimeInfoFs) Reset() {
	*x = RuntimeInfoFs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoFs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoFs) ProtoMessage() {}

func (x *RuntimeInfoFs) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoFs.ProtoReflect.Descriptor instead.
func (*RuntimeInfoFs) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{4}
}

func (x *RuntimeInfoFs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoFs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RuntimeInfoFs) GetMount() string {
	if x != nil {
		return x.Mount
	}
	return ""
}

func (x *RuntimeInfoFs) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RuntimeInfoFs) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *RuntimeInfoFs) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *RuntimeInfoFs) GetUse() uint64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *RuntimeInfoFs) GetReadsCompleted() uint64 {
	if x != nil {
		return x.ReadsCompleted
	}
	return 0
}

func (x *RuntimeInfoFs) GetTimeSpentReadMs() uint64 {
	if x != nil {
		return x.TimeSpentReadMs
	}
	return 0
}

func (x *RuntimeInfoFs) GetWritesCompleted() uint64 {
	if x != nil {
		return x.WritesCompleted
	}
	return 0
}

func (x *RuntimeInfoFs) GetTimeSpentWriteMs() uint64 {
	if x != nil {
		return x.TimeSpentWriteMs
	}
	return 0
}

type RuntimeInfoNet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MobileRxbytes uint64 `protobuf:"fixed64,2,opt,name=mobile_rxbytes,json=mobileRxbytes,proto3" json:"mobile_rxbytes,omitempty"`
	MobileTxbytes uint64 `protobuf:"fixed64,3,opt,name=mobile_txbytes,json=mobileTxbytes,proto3" json:"mobile_txbytes,omitempty"`
	WifiRxbytes   uint64 `protobuf:"fixed64,4,opt,name=wifi_rxbytes,json=wifiRxbytes,proto3" json:"wifi_rxbytes,omitempty"`
	WifiTxbytes   uint64 `protobuf:"fixed64,5,opt,name=wifi_txbytes,json=wifiTxbytes,proto3" json:"wifi_txbytes,omitempty"`
	TotalRxbytes  uint64 `protobuf:"fixed64,6,opt,name=total_rxbytes,json=totalRxbytes,proto3" json:"total_rxbytes,omitempty"`
	TotalTxbytes  uint64 `protobuf:"fixed64,7,opt,name=total_txbytes,json=totalTxbytes,proto3" json:"total_txbytes,omitempty"`
}

func (x *RuntimeInfoNet) Reset() {
	*x = RuntimeInfoNet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoNet) ProtoMessage() {}

func (x *RuntimeInfoNet) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoNet.ProtoReflect.Descriptor instead.
func (*RuntimeInfoNet) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{5}
}

func (x *RuntimeInfoNet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoNet) GetMobileRxbytes() uint64 {
	if x != nil {
		return x.MobileRxbytes
	}
	return 0
}

func (x *RuntimeInfoNet) GetMobileTxbytes() uint64 {
	if x != nil {
		return x.MobileTxbytes
	}
	return 0
}

func (x *RuntimeInfoNet) GetWifiRxbytes() uint64 {
	if x != nil {
		return x.WifiRxbytes
	}
	return 0
}

func (x *RuntimeInfoNet) GetWifiTxbytes() uint64 {
	if x != nil {
		return x.WifiTxbytes
	}
	return 0
}

func (x *RuntimeInfoNet) GetTotalRxbytes() uint64 {
	if x != nil {
		return x.TotalRxbytes
	}
	return 0
}

func (x *RuntimeInfoNet) GetTotalTxbytes() uint64 {
	if x != nil {
		return x.TotalTxbytes
	}
	return 0
}

type RuntimeInfoDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsScreenOn bool   `protobuf:"varint,2,opt,name=is_screen_on,json=isScreenOn,proto3" json:"is_screen_on,omitempty"`
}

func (x *RuntimeInfoDisplay) Reset() {
	*x = RuntimeInfoDisplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoDisplay) ProtoMessage() {}

func (x *RuntimeInfoDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoDisplay.ProtoReflect.Descriptor instead.
func (*RuntimeInfoDisplay) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{6}
}

func (x *RuntimeInfoDisplay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoDisplay) GetIsScreenOn() bool {
	if x != nil {
		return x.IsScreenOn
	}
	return false
}

type RuntimeInfoBattery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percent float32 `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *RuntimeInfoBattery) Reset() {
	*x = RuntimeInfoBattery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfoBattery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfoBattery) ProtoMessage() {}

func (x *RuntimeInfoBattery) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfoBattery.ProtoReflect.Descriptor instead.
func (*RuntimeInfoBattery) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{7}
}

func (x *RuntimeInfoBattery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeInfoBattery) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type RuntimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform       *outer.Platform        `protobuf:"varint,1,opt,name=platform,proto3,enum=outer.Platform,oneof" json:"platform,omitempty"`
	LocalTimeStamp *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=local_time_stamp,json=localTimeStamp,proto3,oneof" json:"local_time_stamp,omitempty"`
	Cpues          []*RuntimeInfoCpu      `protobuf:"bytes,2,rep,name=cpues,proto3" json:"cpues,omitempty"`
	Cpufreqs       []*RuntimeInfoCpuFreq  `protobuf:"bytes,3,rep,name=cpufreqs,proto3" json:"cpufreqs,omitempty"`
	Gpues          []*RuntimeInfoGpu      `protobuf:"bytes,4,rep,name=gpues,proto3" json:"gpues,omitempty"`
	Mems           []*RuntimeInfoMem      `protobuf:"bytes,5,rep,name=mems,proto3" json:"mems,omitempty"`
	Fses           []*RuntimeInfoFs       `protobuf:"bytes,6,rep,name=fses,proto3" json:"fses,omitempty"`
	Nets           []*RuntimeInfoNet      `protobuf:"bytes,7,rep,name=nets,proto3" json:"nets,omitempty"`
	Displays       []*RuntimeInfoDisplay  `protobuf:"bytes,8,rep,name=displays,proto3" json:"displays,omitempty"`
	Batteries      []*RuntimeInfoBattery  `protobuf:"bytes,9,rep,name=batteries,proto3" json:"batteries,omitempty"`
	Processes      []*RuntimeProcessInfo  `protobuf:"bytes,11,rep,name=processes,proto3" json:"processes,omitempty"`
}

func (x *RuntimeInfo) Reset() {
	*x = RuntimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_profile_runtime_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo) ProtoMessage() {}

func (x *RuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_outer_profile_runtime_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return file_outer_profile_runtime_info_proto_rawDescGZIP(), []int{8}
}

func (x *RuntimeInfo) GetPlatform() outer.Platform {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return outer.Platform(0)
}

func (x *RuntimeInfo) GetLocalTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LocalTimeStamp
	}
	return nil
}

func (x *RuntimeInfo) GetCpues() []*RuntimeInfoCpu {
	if x != nil {
		return x.Cpues
	}
	return nil
}

func (x *RuntimeInfo) GetCpufreqs() []*RuntimeInfoCpuFreq {
	if x != nil {
		return x.Cpufreqs
	}
	return nil
}

func (x *RuntimeInfo) GetGpues() []*RuntimeInfoGpu {
	if x != nil {
		return x.Gpues
	}
	return nil
}

func (x *RuntimeInfo) GetMems() []*RuntimeInfoMem {
	if x != nil {
		return x.Mems
	}
	return nil
}

func (x *RuntimeInfo) GetFses() []*RuntimeInfoFs {
	if x != nil {
		return x.Fses
	}
	return nil
}

func (x *RuntimeInfo) GetNets() []*RuntimeInfoNet {
	if x != nil {
		return x.Nets
	}
	return nil
}

func (x *RuntimeInfo) GetDisplays() []*RuntimeInfoDisplay {
	if x != nil {
		return x.Displays
	}
	return nil
}

func (x *RuntimeInfo) GetBatteries() []*RuntimeInfoBattery {
	if x != nil {
		return x.Batteries
	}
	return nil
}

func (x *RuntimeInfo) GetProcesses() []*RuntimeProcessInfo {
	if x != nil {
		return x.Processes
	}
	return nil
}

var File_outer_profile_runtime_info_proto protoreflect.FileDescriptor

var file_outer_profile_runtime_info_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcf, 0x02, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x70, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64,
	0x4e, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x69, 0x72, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x72, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x43, 0x70, 0x75, 0x22, 0x5c, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x70, 0x75, 0x46, 0x72, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x03, 0x63, 0x75, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x47, 0x70, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x85, 0x02, 0x0a, 0x0e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x77, 0x61, 0x70, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x73, 0x77, 0x61, 0x70, 0x66, 0x72, 0x65, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x6c, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4c, 0x6f, 0x77,
	0x22, 0xd5, 0x02, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x6e,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x0e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x78, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52,
	0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x5f, 0x74, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x72, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x52, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x74, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x54, 0x78, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x78, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x74, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x4a, 0x0a,
	0x12, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4f, 0x6e, 0x22, 0x42, 0x0a, 0x12, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xae, 0x05,
	0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x49, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x70,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x70, 0x75, 0x52, 0x05, 0x63, 0x70, 0x75, 0x65, 0x73, 0x12,
	0x3d, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x66, 0x72, 0x65, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x70, 0x75,
	0x46, 0x72, 0x65, 0x71, 0x52, 0x08, 0x63, 0x70, 0x75, 0x66, 0x72, 0x65, 0x71, 0x73, 0x12, 0x33,
	0x0a, 0x05, 0x67, 0x70, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x70, 0x75, 0x52, 0x05, 0x67, 0x70,
	0x75, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d,
	0x52, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x73, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x73, 0x52, 0x04, 0x66, 0x73, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x6e, 0x65, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4e, 0x65, 0x74, 0x52, 0x04, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x6e,
	0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5a, 0x41, 0x67, 0x6f, 0x2d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_outer_profile_runtime_info_proto_rawDescOnce sync.Once
	file_outer_profile_runtime_info_proto_rawDescData = file_outer_profile_runtime_info_proto_rawDesc
)

func file_outer_profile_runtime_info_proto_rawDescGZIP() []byte {
	file_outer_profile_runtime_info_proto_rawDescOnce.Do(func() {
		file_outer_profile_runtime_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_outer_profile_runtime_info_proto_rawDescData)
	})
	return file_outer_profile_runtime_info_proto_rawDescData
}

var file_outer_profile_runtime_info_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_outer_profile_runtime_info_proto_goTypes = []interface{}{
	(*RuntimeInfoCpu)(nil),        // 0: outer.profile.RuntimeInfoCpu
	(*RuntimeInfoCpuFreq)(nil),    // 1: outer.profile.RuntimeInfoCpuFreq
	(*RuntimeInfoGpu)(nil),        // 2: outer.profile.RuntimeInfoGpu
	(*RuntimeInfoMem)(nil),        // 3: outer.profile.RuntimeInfoMem
	(*RuntimeInfoFs)(nil),         // 4: outer.profile.RuntimeInfoFs
	(*RuntimeInfoNet)(nil),        // 5: outer.profile.RuntimeInfoNet
	(*RuntimeInfoDisplay)(nil),    // 6: outer.profile.RuntimeInfoDisplay
	(*RuntimeInfoBattery)(nil),    // 7: outer.profile.RuntimeInfoBattery
	(*RuntimeInfo)(nil),           // 8: outer.profile.RuntimeInfo
	(outer.Platform)(0),           // 9: outer.Platform
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*RuntimeProcessInfo)(nil),    // 11: outer.profile.RuntimeProcessInfo
}
var file_outer_profile_runtime_info_proto_depIdxs = []int32{
	9,  // 0: outer.profile.RuntimeInfo.platform:type_name -> outer.Platform
	10, // 1: outer.profile.RuntimeInfo.local_time_stamp:type_name -> google.protobuf.Timestamp
	0,  // 2: outer.profile.RuntimeInfo.cpues:type_name -> outer.profile.RuntimeInfoCpu
	1,  // 3: outer.profile.RuntimeInfo.cpufreqs:type_name -> outer.profile.RuntimeInfoCpuFreq
	2,  // 4: outer.profile.RuntimeInfo.gpues:type_name -> outer.profile.RuntimeInfoGpu
	3,  // 5: outer.profile.RuntimeInfo.mems:type_name -> outer.profile.RuntimeInfoMem
	4,  // 6: outer.profile.RuntimeInfo.fses:type_name -> outer.profile.RuntimeInfoFs
	5,  // 7: outer.profile.RuntimeInfo.nets:type_name -> outer.profile.RuntimeInfoNet
	6,  // 8: outer.profile.RuntimeInfo.displays:type_name -> outer.profile.RuntimeInfoDisplay
	7,  // 9: outer.profile.RuntimeInfo.batteries:type_name -> outer.profile.RuntimeInfoBattery
	11, // 10: outer.profile.RuntimeInfo.processes:type_name -> outer.profile.RuntimeProcessInfo
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_outer_profile_runtime_info_proto_init() }
func file_outer_profile_runtime_info_proto_init() {
	if File_outer_profile_runtime_info_proto != nil {
		return
	}
	file_outer_profile_runtime_process_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_outer_profile_runtime_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoCpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoCpuFreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoGpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoMem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoFs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoNet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoDisplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfoBattery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_profile_runtime_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_outer_profile_runtime_info_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outer_profile_runtime_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outer_profile_runtime_info_proto_goTypes,
		DependencyIndexes: file_outer_profile_runtime_info_proto_depIdxs,
		MessageInfos:      file_outer_profile_runtime_info_proto_msgTypes,
	}.Build()
	File_outer_profile_runtime_info_proto = out.File
	file_outer_profile_runtime_info_proto_rawDesc = nil
	file_outer_profile_runtime_info_proto_goTypes = nil
	file_outer_profile_runtime_info_proto_depIdxs = nil
}
