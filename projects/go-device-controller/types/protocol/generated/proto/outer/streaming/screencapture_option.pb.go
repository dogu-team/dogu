// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: outer/streaming/screencapture_option.proto

package streaming

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScreenCaptureOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (android): available
	// (ios): ignored
	BitRate *uint64 `protobuf:"fixed64,1,opt,name=bit_rate,json=bitRate,proto3,oneof" json:"bit_rate,omitempty"`
	// (android): available
	// https://developer.android.com/reference/android/media/MediaFormat#KEY_MAX_FPS_TO_ENCODER
	//
	// (ios): ignored
	MaxFps *uint64 `protobuf:"fixed64,2,opt,name=max_fps,json=maxFps,proto3,oneof" json:"max_fps,omitempty"`
	// (android): available
	// https://developer.android.com/reference/android/media/MediaFormat#KEY_FRAME_RATE
	//
	// (ios): ignored
	FrameRate *uint64 `protobuf:"fixed64,3,opt,name=frame_rate,json=frameRate,proto3,oneof" json:"frame_rate,omitempty"`
	// (android): available
	// https://developer.android.com/reference/android/media/MediaFormat#KEY_I_FRAME_INTERVAL
	//
	// (ios): ignored
	FrameInterval *uint64 `protobuf:"fixed64,4,opt,name=frame_interval,json=frameInterval,proto3,oneof" json:"frame_interval,omitempty"`
	// (android): available
	// https://developer.android.com/reference/android/media/MediaFormat#KEY_REPEAT_PREVIOUS_FRAME_AFTER
	//
	// (ios): ignored
	RepeatFrameDelay *uint64 `protobuf:"fixed64,5,opt,name=repeat_frame_delay,json=repeatFrameDelay,proto3,oneof" json:"repeat_frame_delay,omitempty"`
	// (android): available
	// 현재 width x height 중 width의 값으로 처리함
	// 예) 1920, 1600, 1280, 1024, 800, 640, 320
	//
	// (ios): available
	// iOS의 경우, 입력값에 따라 단말기가 가능한 해상도 프리셋으로 변경되어 사용함
	// 2160 <= max_resolution        -> 3840x2160
	// 1080 <= max_resolution < 2160 -> 1920x1080
	//  720 <= max_resolution < 1080 -> 1280x720
	// ...                           -> 960x540
	// ...                           -> 640x480
	// ...                           -> 352x288
	// ...                           -> 320x240
	MaxResolution *uint32 `protobuf:"fixed32,6,opt,name=max_resolution,json=maxResolution,proto3,oneof" json:"max_resolution,omitempty"`
}

func (x *ScreenCaptureOption) Reset() {
	*x = ScreenCaptureOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_streaming_screencapture_option_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenCaptureOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenCaptureOption) ProtoMessage() {}

func (x *ScreenCaptureOption) ProtoReflect() protoreflect.Message {
	mi := &file_outer_streaming_screencapture_option_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenCaptureOption.ProtoReflect.Descriptor instead.
func (*ScreenCaptureOption) Descriptor() ([]byte, []int) {
	return file_outer_streaming_screencapture_option_proto_rawDescGZIP(), []int{0}
}

func (x *ScreenCaptureOption) GetBitRate() uint64 {
	if x != nil && x.BitRate != nil {
		return *x.BitRate
	}
	return 0
}

func (x *ScreenCaptureOption) GetMaxFps() uint64 {
	if x != nil && x.MaxFps != nil {
		return *x.MaxFps
	}
	return 0
}

func (x *ScreenCaptureOption) GetFrameRate() uint64 {
	if x != nil && x.FrameRate != nil {
		return *x.FrameRate
	}
	return 0
}

func (x *ScreenCaptureOption) GetFrameInterval() uint64 {
	if x != nil && x.FrameInterval != nil {
		return *x.FrameInterval
	}
	return 0
}

func (x *ScreenCaptureOption) GetRepeatFrameDelay() uint64 {
	if x != nil && x.RepeatFrameDelay != nil {
		return *x.RepeatFrameDelay
	}
	return 0
}

func (x *ScreenCaptureOption) GetMaxResolution() uint32 {
	if x != nil && x.MaxResolution != nil {
		return *x.MaxResolution
	}
	return 0
}

var File_outer_streaming_screencapture_option_proto protoreflect.FileDescriptor

var file_outer_streaming_screencapture_option_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xe7, 0x02,
	0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x07, 0x62, 0x69, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x48, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x70, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x48, 0x02, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x48,
	0x03, 0x52, 0x0d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x48,
	0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x07, 0x48, 0x05,
	0x52, 0x0d, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x70, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x6f, 0x67, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5a, 0x43, 0x67, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_outer_streaming_screencapture_option_proto_rawDescOnce sync.Once
	file_outer_streaming_screencapture_option_proto_rawDescData = file_outer_streaming_screencapture_option_proto_rawDesc
)

func file_outer_streaming_screencapture_option_proto_rawDescGZIP() []byte {
	file_outer_streaming_screencapture_option_proto_rawDescOnce.Do(func() {
		file_outer_streaming_screencapture_option_proto_rawDescData = protoimpl.X.CompressGZIP(file_outer_streaming_screencapture_option_proto_rawDescData)
	})
	return file_outer_streaming_screencapture_option_proto_rawDescData
}

var file_outer_streaming_screencapture_option_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_outer_streaming_screencapture_option_proto_goTypes = []interface{}{
	(*ScreenCaptureOption)(nil), // 0: outer.streaming.ScreenCaptureOption
}
var file_outer_streaming_screencapture_option_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_outer_streaming_screencapture_option_proto_init() }
func file_outer_streaming_screencapture_option_proto_init() {
	if File_outer_streaming_screencapture_option_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_outer_streaming_screencapture_option_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenCaptureOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_outer_streaming_screencapture_option_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outer_streaming_screencapture_option_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outer_streaming_screencapture_option_proto_goTypes,
		DependencyIndexes: file_outer_streaming_screencapture_option_proto_depIdxs,
		MessageInfos:      file_outer_streaming_screencapture_option_proto_msgTypes,
	}.Build()
	File_outer_streaming_screencapture_option_proto = out.File
	file_outer_streaming_screencapture_option_proto_rawDesc = nil
	file_outer_streaming_screencapture_option_proto_goTypes = nil
	file_outer_streaming_screencapture_option_proto_depIdxs = nil
}
