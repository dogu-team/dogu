// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: outer/streaming/streaming.proto

package streaming

import (
	outer "go-device-controller/types/protocol/generated/proto/outer"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Screen *ScreenCaptureOption `protobuf:"bytes,1,opt,name=screen,proto3" json:"screen,omitempty"`
}

func (x *StreamingOption) Reset() {
	*x = StreamingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_streaming_streaming_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingOption) ProtoMessage() {}

func (x *StreamingOption) ProtoReflect() protoreflect.Message {
	mi := &file_outer_streaming_streaming_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingOption.ProtoReflect.Descriptor instead.
func (*StreamingOption) Descriptor() ([]byte, []int) {
	return file_outer_streaming_streaming_proto_rawDescGZIP(), []int{0}
}

func (x *StreamingOption) GetScreen() *ScreenCaptureOption {
	if x != nil {
		return x.Screen
	}
	return nil
}

type StartStreaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerDescription    *ProtoRTCPeerDescription `protobuf:"bytes,1,opt,name=peer_description,json=peerDescription,proto3" json:"peer_description,omitempty"`
	Option             *StreamingOption         `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	TurnServerUrl      string                   `protobuf:"bytes,3,opt,name=turn_server_url,json=turnServerUrl,proto3" json:"turn_server_url,omitempty"`
	TurnServerUsername string                   `protobuf:"bytes,4,opt,name=turn_server_username,json=turnServerUsername,proto3" json:"turn_server_username,omitempty"`
	TurnServerPassword string                   `protobuf:"bytes,5,opt,name=turn_server_password,json=turnServerPassword,proto3" json:"turn_server_password,omitempty"`
	Platform           outer.Platform           `protobuf:"varint,6,opt,name=platform,proto3,enum=outer.Platform" json:"platform,omitempty"`
}

func (x *StartStreaming) Reset() {
	*x = StartStreaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_streaming_streaming_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreaming) ProtoMessage() {}

func (x *StartStreaming) ProtoReflect() protoreflect.Message {
	mi := &file_outer_streaming_streaming_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreaming.ProtoReflect.Descriptor instead.
func (*StartStreaming) Descriptor() ([]byte, []int) {
	return file_outer_streaming_streaming_proto_rawDescGZIP(), []int{1}
}

func (x *StartStreaming) GetPeerDescription() *ProtoRTCPeerDescription {
	if x != nil {
		return x.PeerDescription
	}
	return nil
}

func (x *StartStreaming) GetOption() *StreamingOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *StartStreaming) GetTurnServerUrl() string {
	if x != nil {
		return x.TurnServerUrl
	}
	return ""
}

func (x *StartStreaming) GetTurnServerUsername() string {
	if x != nil {
		return x.TurnServerUsername
	}
	return ""
}

func (x *StartStreaming) GetTurnServerPassword() string {
	if x != nil {
		return x.TurnServerPassword
	}
	return ""
}

func (x *StartStreaming) GetPlatform() outer.Platform {
	if x != nil {
		return x.Platform
	}
	return outer.Platform(0)
}

type StreamingOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial string `protobuf:"bytes,1,opt,name=serial,proto3" json:"serial,omitempty"`
	// Types that are assignable to Value:
	//	*StreamingOffer_StartStreaming
	//	*StreamingOffer_IceCandidate
	Value isStreamingOffer_Value `protobuf_oneof:"value"`
}

func (x *StreamingOffer) Reset() {
	*x = StreamingOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_streaming_streaming_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingOffer) ProtoMessage() {}

func (x *StreamingOffer) ProtoReflect() protoreflect.Message {
	mi := &file_outer_streaming_streaming_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingOffer.ProtoReflect.Descriptor instead.
func (*StreamingOffer) Descriptor() ([]byte, []int) {
	return file_outer_streaming_streaming_proto_rawDescGZIP(), []int{2}
}

func (x *StreamingOffer) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (m *StreamingOffer) GetValue() isStreamingOffer_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *StreamingOffer) GetStartStreaming() *StartStreaming {
	if x, ok := x.GetValue().(*StreamingOffer_StartStreaming); ok {
		return x.StartStreaming
	}
	return nil
}

func (x *StreamingOffer) GetIceCandidate() *ProtoRTCIceCandidateInit {
	if x, ok := x.GetValue().(*StreamingOffer_IceCandidate); ok {
		return x.IceCandidate
	}
	return nil
}

type isStreamingOffer_Value interface {
	isStreamingOffer_Value()
}

type StreamingOffer_StartStreaming struct {
	StartStreaming *StartStreaming `protobuf:"bytes,2,opt,name=start_streaming,json=startStreaming,proto3,oneof"`
}

type StreamingOffer_IceCandidate struct {
	IceCandidate *ProtoRTCIceCandidateInit `protobuf:"bytes,3,opt,name=ice_candidate,json=iceCandidate,proto3,oneof"`
}

func (*StreamingOffer_StartStreaming) isStreamingOffer_Value() {}

func (*StreamingOffer_IceCandidate) isStreamingOffer_Value() {}

type StreamingAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*StreamingAnswer_PeerDescription
	//	*StreamingAnswer_IceCandidate
	//	*StreamingAnswer_ErrorResult
	Value isStreamingAnswer_Value `protobuf_oneof:"value"`
}

func (x *StreamingAnswer) Reset() {
	*x = StreamingAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_streaming_streaming_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingAnswer) ProtoMessage() {}

func (x *StreamingAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_outer_streaming_streaming_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingAnswer.ProtoReflect.Descriptor instead.
func (*StreamingAnswer) Descriptor() ([]byte, []int) {
	return file_outer_streaming_streaming_proto_rawDescGZIP(), []int{3}
}

func (m *StreamingAnswer) GetValue() isStreamingAnswer_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *StreamingAnswer) GetPeerDescription() *ProtoRTCPeerDescription {
	if x, ok := x.GetValue().(*StreamingAnswer_PeerDescription); ok {
		return x.PeerDescription
	}
	return nil
}

func (x *StreamingAnswer) GetIceCandidate() *ProtoRTCIceCandidateInit {
	if x, ok := x.GetValue().(*StreamingAnswer_IceCandidate); ok {
		return x.IceCandidate
	}
	return nil
}

func (x *StreamingAnswer) GetErrorResult() *outer.ErrorResult {
	if x, ok := x.GetValue().(*StreamingAnswer_ErrorResult); ok {
		return x.ErrorResult
	}
	return nil
}

type isStreamingAnswer_Value interface {
	isStreamingAnswer_Value()
}

type StreamingAnswer_PeerDescription struct {
	PeerDescription *ProtoRTCPeerDescription `protobuf:"bytes,1,opt,name=peer_description,json=peerDescription,proto3,oneof"`
}

type StreamingAnswer_IceCandidate struct {
	IceCandidate *ProtoRTCIceCandidateInit `protobuf:"bytes,2,opt,name=ice_candidate,json=iceCandidate,proto3,oneof"`
}

type StreamingAnswer_ErrorResult struct {
	ErrorResult *outer.ErrorResult `protobuf:"bytes,3,opt,name=error_result,json=errorResult,proto3,oneof"`
}

func (*StreamingAnswer_PeerDescription) isStreamingAnswer_Value() {}

func (*StreamingAnswer_IceCandidate) isStreamingAnswer_Value() {}

func (*StreamingAnswer_ErrorResult) isStreamingAnswer_Value() {}

var File_outer_streaming_streaming_proto protoreflect.FileDescriptor

var file_outer_streaming_streaming_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x1a, 0x12, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0xd8, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x10, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x54, 0x43, 0x50,
	0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x70, 0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x4a, 0x0a,
	0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x50, 0x0a, 0x0d, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x54, 0x43, 0x49, 0x63, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x10, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x54, 0x43, 0x50, 0x65, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f,
	0x70, 0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x0d, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x54,
	0x43, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x72, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5a, 0x43, 0x67, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_outer_streaming_streaming_proto_rawDescOnce sync.Once
	file_outer_streaming_streaming_proto_rawDescData = file_outer_streaming_streaming_proto_rawDesc
)

func file_outer_streaming_streaming_proto_rawDescGZIP() []byte {
	file_outer_streaming_streaming_proto_rawDescOnce.Do(func() {
		file_outer_streaming_streaming_proto_rawDescData = protoimpl.X.CompressGZIP(file_outer_streaming_streaming_proto_rawDescData)
	})
	return file_outer_streaming_streaming_proto_rawDescData
}

var file_outer_streaming_streaming_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_outer_streaming_streaming_proto_goTypes = []interface{}{
	(*StreamingOption)(nil),          // 0: outer.streaming.StreamingOption
	(*StartStreaming)(nil),           // 1: outer.streaming.StartStreaming
	(*StreamingOffer)(nil),           // 2: outer.streaming.StreamingOffer
	(*StreamingAnswer)(nil),          // 3: outer.streaming.StreamingAnswer
	(*ScreenCaptureOption)(nil),      // 4: outer.streaming.ScreenCaptureOption
	(*ProtoRTCPeerDescription)(nil),  // 5: outer.streaming.ProtoRTCPeerDescription
	(outer.Platform)(0),              // 6: outer.Platform
	(*ProtoRTCIceCandidateInit)(nil), // 7: outer.streaming.ProtoRTCIceCandidateInit
	(*outer.ErrorResult)(nil),        // 8: outer.ErrorResult
}
var file_outer_streaming_streaming_proto_depIdxs = []int32{
	4, // 0: outer.streaming.StreamingOption.screen:type_name -> outer.streaming.ScreenCaptureOption
	5, // 1: outer.streaming.StartStreaming.peer_description:type_name -> outer.streaming.ProtoRTCPeerDescription
	0, // 2: outer.streaming.StartStreaming.option:type_name -> outer.streaming.StreamingOption
	6, // 3: outer.streaming.StartStreaming.platform:type_name -> outer.Platform
	1, // 4: outer.streaming.StreamingOffer.start_streaming:type_name -> outer.streaming.StartStreaming
	7, // 5: outer.streaming.StreamingOffer.ice_candidate:type_name -> outer.streaming.ProtoRTCIceCandidateInit
	5, // 6: outer.streaming.StreamingAnswer.peer_description:type_name -> outer.streaming.ProtoRTCPeerDescription
	7, // 7: outer.streaming.StreamingAnswer.ice_candidate:type_name -> outer.streaming.ProtoRTCIceCandidateInit
	8, // 8: outer.streaming.StreamingAnswer.error_result:type_name -> outer.ErrorResult
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_outer_streaming_streaming_proto_init() }
func file_outer_streaming_streaming_proto_init() {
	if File_outer_streaming_streaming_proto != nil {
		return
	}
	file_outer_streaming_screencapture_option_proto_init()
	file_outer_streaming_webrtc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_outer_streaming_streaming_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_streaming_streaming_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_streaming_streaming_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outer_streaming_streaming_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_outer_streaming_streaming_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StreamingOffer_StartStreaming)(nil),
		(*StreamingOffer_IceCandidate)(nil),
	}
	file_outer_streaming_streaming_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*StreamingAnswer_PeerDescription)(nil),
		(*StreamingAnswer_IceCandidate)(nil),
		(*StreamingAnswer_ErrorResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outer_streaming_streaming_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outer_streaming_streaming_proto_goTypes,
		DependencyIndexes: file_outer_streaming_streaming_proto_depIdxs,
		MessageInfos:      file_outer_streaming_streaming_proto_msgTypes,
	}.Build()
	File_outer_streaming_streaming_proto = out.File
	file_outer_streaming_streaming_proto_rawDesc = nil
	file_outer_streaming_streaming_proto_goTypes = nil
	file_outer_streaming_streaming_proto_depIdxs = nil
}
