// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: outer/errors.proto

package outer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// @note To maintain the uniqueness of error codes, duplicate codes are not
// allowed.
type Code int32

const (
	//*
	// @note Common errors.
	// 0 ~ 999 is used for common errors.
	// 0 means success code.
	Code_CODE_SUCCESS_COMMON_BEGIN_UNSPECIFIED Code = 0
	//*
	// @note Unexpected error.
	Code_CODE_UNEXPECTED_ERROR Code = 1
	//*
	// @note Number errors.
	Code_CODE_NUMBER_UNDER_RANGE Code = 2
	Code_CODE_NUMBER_OVER_RANGE  Code = 3
	Code_CODE_NUMBER_ZERO        Code = 4
	Code_CODE_NUMBER_NULL        Code = 5
	//*
	// @note String errors.
	Code_CODE_STRING_UNDER_RANGE       Code = 10
	Code_CODE_STRING_OVER_RANGE        Code = 11
	Code_CODE_STRING_EMPTY             Code = 12
	Code_CODE_STRING_NULL              Code = 13
	Code_CODE_STRING_PARSE_FAILED      Code = 14
	Code_CODE_STRING_INVALID_CHARACTER Code = 15
	Code_CODE_STRING_ENCODING_FAILED   Code = 16
	Code_CODE_STRING_DECODING_FAILED   Code = 17
	Code_CODE_STRING_CONVERSION_FAILED Code = 18
	Code_CODE_STRING_INVALID_SYNTAX    Code = 19
	//*
	// @note Binary errors.
	Code_CODE_BINARY_UNDER_RANGE       Code = 20
	Code_CODE_BINARY_OVER_RANGE        Code = 21
	Code_CODE_BINARY_EMPTY             Code = 22
	Code_CODE_BINARY_NULL              Code = 23
	Code_CODE_BINARY_ENCODING_FAILED   Code = 24
	Code_CODE_BINARY_DECODING_FAILED   Code = 25
	Code_CODE_BINARY_CONVERSION_FAILED Code = 26
	Code_CODE_BINARY_VALIDATION_FAILED Code = 27
	//*
	// @note Date errors.
	Code_CODE_DATE_INVALID_YEAR   Code = 30
	Code_CODE_DATE_INVALID_MONTH  Code = 31
	Code_CODE_DATE_INVALID_DAY    Code = 32
	Code_CODE_DATE_INVALID_HOUR   Code = 33
	Code_CODE_DATE_INVALID_MINITE Code = 34
	Code_CODE_DATE_INVALID_SECOND Code = 35
	//*
	// @note Time errors.
	Code_CODE_TIME_INVALID_TIMEZONE Code = 40
	//*
	// @note Array errors.
	Code_CODE_ARRAY_UNDER_RANGE  Code = 50
	Code_CODE_ARRAY_OVER_RANGE   Code = 51
	Code_CODE_ARRAY_EMPTY        Code = 52
	Code_CODE_ARRAY_KEY_NOTFOUND Code = 53
	//*
	// @note Map errors.
	// map means key-value storage like dictionary.
	Code_CODE_MAP_KEY_NOTFOUND Code = 60
	//*
	// @note Concurrency errors.
	Code_CODE_CONCURRENCY_LOCK_FAILED Code = 70
	Code_CODE_CONCURRENCY_DEADLOCK    Code = 71
	Code_CODE_CONCURRENCY_RACE        Code = 72
	//*
	// @note Filesystem errors.
	Code_CODE_FILESYSTEM_FILE_NOTFOUND      Code = 90
	Code_CODE_FILESYSTEM_DIRECTORY_NOTFOUND Code = 91
	Code_CODE_FILESYSTEM_FILE_OPEN_FAILED   Code = 92
	Code_CODE_FILESYSTEM_FILE_CLOSE_FAILED  Code = 93
	Code_CODE_FILESYSTEM_FILE_READ_FAILED   Code = 94
	Code_CODE_FILESYSTEM_FILE_WRITE_FAILED  Code = 95
	Code_CODE_FILESYSTEM_DISK_FULL          Code = 96
	//*
	// @note Network errors.
	Code_CODE_NETWORK_CONNECTION_FAILED            Code = 100
	Code_CODE_NETWORK_CONNECTION_CLOSED            Code = 101
	Code_CODE_NETWORK_CONNECTION_TIMEOUT           Code = 102
	Code_CODE_NETWORK_CONNECTION_REFUSED           Code = 103
	Code_CODE_NETWORK_CONNECTION_ABORTED           Code = 104
	Code_CODE_NETWORK_CONNECTION_ALREADY_CONNECTED Code = 105
	Code_CODE_NETWORK_CONNECTION_INVALID_URI       Code = 106
	//*
	// @note Process errors.
	Code_CODE_PROCESS_FORK_FAILED          Code = 110
	Code_CODE_PROCESS_EXEC_FAILED          Code = 111
	Code_CODE_PROCESS_WAIT_FAILED          Code = 112
	Code_CODE_PROCESS_KILL_FAILED          Code = 113
	Code_CODE_PROCESS_SIGNAL_FAILED        Code = 114
	Code_CODE_PROCESS_SIGNAL_NOT_SUPPORTED Code = 115
	//*
	// @note Memory errors.
	Code_CODE_MEMORY_ALLOCATION_FAILED   Code = 120
	Code_CODE_MEMORY_REALLOCATION_FAILED Code = 121
	Code_CODE_MEMORY_FREE_FAILED         Code = 122
	Code_CODE_MEMORY_OUT_OF_MEMORY       Code = 123
	//*
	// @note Security errors
	Code_CODE_SECURITY_UNAUTHENTICATED   Code = 130
	Code_CODE_SECURITY_UNAUTHORISED      Code = 131
	Code_CODE_SECURITY_PERMISSION_DENIED Code = 132
	Code_CODE_SECURITY_INVALID_TOKEN     Code = 133
	//*
	// @note Input errors.
	Code_CODE_INPUT_NOTREADY  Code = 140
	Code_CODE_INPUT_DISCARDED Code = 141
	Code_CODE_INPUT_UNKNOWN   Code = 142
	//*
	// @note Screen record errors.
	Code_CODE_SCREENRECORD_NOTREADY           Code = 150
	Code_CODE_SCREENRECORD_ALREADY_RECORDING  Code = 151
	Code_CODE_SCREENRECORD_NOTSTARTED         Code = 152
	Code_CODE_SCREENRECORD_MULTIPLE_RECORDING Code = 153
	Code_CODE_SCREENRECORD_NOTFOUND           Code = 154
	Code_CODE_SCREENRECORD_NOTSUPPORTED       Code = 155
	//*
	// @note WebRTC errors.
	Code_CODE_WEBRTC_PEERCONNECTION_FAILED Code = 160
	Code_CODE_WEBRTC_CODEC_NOTSUPPORTED    Code = 161
	//*
	// @note Device errors.
	Code_CODE_DEVICE_NOTFOUND Code = 200
	//*
	// @note Common errors end.
	Code_CODE_COMMON_END Code = 999
	//*
	// @note Dost errors.
	// 1000 ~ 1999 is used for dost app.
	// 1000 ~ 1255 are used for exit codes 0 ~ 255.
	// 1000 means success code.
	Code_CODE_DOST_SUCCESS_BEGIN Code = 1000
	//*
	// @note Dost errors end.
	Code_CODE_DOST_END Code = 1999
	//
	// @note Host Agent errors.
	// 2000 ~ 2999 is used for host agent process.
	// 2000 ~ 2255 are used for exit codes 0 ~ 255.
	// 2000 means success code.
	Code_CODE_HOST_AGENT_SUCCESS_BEGIN    Code = 2000
	Code_CODE_HOST_AGENT_UNEXPECTED_ERROR Code = 2001
	Code_CODE_HOST_AGENT_INVALID_ENV      Code = 2002
	Code_CODE_HOST_AGENT_PORT_IN_USE      Code = 2003
	//
	// @note reserved for host agent exit code 255.
	Code_CODE_HOST_AGENT_EXIT_CODE_END Code = 2255
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGHUP Code = 2301
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGINT Code = 2302
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGQUIT Code = 2303
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGILL Code = 2304
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGTRAP Code = 2305
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGABRT Code = 2306
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGFPE Code = 2308
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGKILL Code = 2309
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGSEGV Code = 2311
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGPIPE Code = 2313
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGALRM Code = 2314
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_HOST_AGENT_SIGTERM               Code = 2315
	Code_CODE_HOST_AGENT_DEVICE_REQUEST_FAILED Code = 2400
	Code_CODE_HOST_AGENT_INVALID_TOKEN         Code = 2401
	Code_CODE_HOST_AGENT_CONNECTION_REFUSED    Code = 2402
	Code_CODE_HOST_AGENT_NOT_RUNNING           Code = 2403
	Code_CODE_HOST_AGENT_REQUEST_FAILED        Code = 2404
	//*
	// @note Host Agent errors end.
	Code_CODE_HOST_AGENT_END Code = 2999
	//
	// @note Device server errors.
	// 3000 ~ 3999 is used for device server process.
	// 3000 ~ 3255 are used for exit codes 0 ~ 255.
	// 3000 means success code.
	Code_CODE_DEVICE_SERVER_SUCCESS_BEGIN    Code = 3000
	Code_CODE_DEVICE_SERVER_UNEXPECTED_ERROR Code = 3001
	Code_CODE_DEVICE_SERVER_INVALID_ENV      Code = 3002
	//*
	// @note Device server port in use.
	// check if the port is in use by other process.
	Code_CODE_DEVICE_SERVER_PORT_IN_USE Code = 3003
	//
	// @note reserved for device server exit code 255.
	Code_CODE_DEVICE_SERVER_EXIT_CODE_END Code = 3255
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGHUP Code = 3301
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGINT Code = 3302
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGQUIT Code = 3303
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGILL Code = 3304
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGTRAP Code = 3305
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGABRT Code = 3306
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGFPE Code = 3308
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGKILL Code = 3309
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGSEGV Code = 3311
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGPIPE Code = 3313
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGALRM Code = 3314
	//
	// @link https://en.wikipedia.org/wiki/Signal_(IPC)
	// @note reserved for signal to code conversion.
	Code_CODE_DEVICE_SERVER_SIGTERM                       Code = 3315
	Code_CODE_DEVICE_SERVER_DEVICE_NOT_FOUND              Code = 3400
	Code_CODE_DEVICE_SERVER_APPIUM_CONTEXT_NOT_FOUND      Code = 3401
	Code_CODE_DEVICE_SERVER_GAMIUM_CONTEXT_NOT_FOUND      Code = 3402
	Code_CODE_DEVICE_SERVER_APPIUM_CONTEXT_INFO_NOT_FOUND Code = 3403
	//*
	// @note Device server errors end.
	Code_CODE_DEVICE_SERVER_END Code = 3999
	//
	// @note Device Controller errors.
	// 4000 ~ 4999 is used for device controller.
	// 4000 means success code.
	Code_CODE_DEVICE_CONTROLLER_BEGIN                   Code = 4000
	Code_CODE_DEVICE_CONTROLLER_INPUT_NOTSUPPORTED      Code = 4001
	Code_CODE_DEVICE_CONTROLLER_INPUT_PERMISSION_DENIED Code = 4002
	Code_CODE_DEVICE_CONTROLLER_INPUT_UNKNOWN           Code = 4003
	//*
	// @note Device Controller errors end.
	Code_CODE_DEVICE_CONTROLLER_END Code = 4999
	//
	// @note Android Device Agent errors.
	// 5000 ~ 5999 is used for android device agent.
	// 5000 means success code.
	Code_CODE_ANDROID_DEVICE_AGENT_BEGIN                  Code = 5000
	Code_CODE_ANDROID_DEVICE_AGENT_INPUT_UNKNOWN          Code = 5001
	Code_CODE_ANDROID_DEVICE_AGENT_CLIPBOARD_NOTAVAILABLE Code = 5002
	//*
	// @note Android Device Agent errors end.
	Code_CODE_ANDROID_DEVICE_AGENT_END Code = 5999
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:    "CODE_SUCCESS_COMMON_BEGIN_UNSPECIFIED",
		1:    "CODE_UNEXPECTED_ERROR",
		2:    "CODE_NUMBER_UNDER_RANGE",
		3:    "CODE_NUMBER_OVER_RANGE",
		4:    "CODE_NUMBER_ZERO",
		5:    "CODE_NUMBER_NULL",
		10:   "CODE_STRING_UNDER_RANGE",
		11:   "CODE_STRING_OVER_RANGE",
		12:   "CODE_STRING_EMPTY",
		13:   "CODE_STRING_NULL",
		14:   "CODE_STRING_PARSE_FAILED",
		15:   "CODE_STRING_INVALID_CHARACTER",
		16:   "CODE_STRING_ENCODING_FAILED",
		17:   "CODE_STRING_DECODING_FAILED",
		18:   "CODE_STRING_CONVERSION_FAILED",
		19:   "CODE_STRING_INVALID_SYNTAX",
		20:   "CODE_BINARY_UNDER_RANGE",
		21:   "CODE_BINARY_OVER_RANGE",
		22:   "CODE_BINARY_EMPTY",
		23:   "CODE_BINARY_NULL",
		24:   "CODE_BINARY_ENCODING_FAILED",
		25:   "CODE_BINARY_DECODING_FAILED",
		26:   "CODE_BINARY_CONVERSION_FAILED",
		27:   "CODE_BINARY_VALIDATION_FAILED",
		30:   "CODE_DATE_INVALID_YEAR",
		31:   "CODE_DATE_INVALID_MONTH",
		32:   "CODE_DATE_INVALID_DAY",
		33:   "CODE_DATE_INVALID_HOUR",
		34:   "CODE_DATE_INVALID_MINITE",
		35:   "CODE_DATE_INVALID_SECOND",
		40:   "CODE_TIME_INVALID_TIMEZONE",
		50:   "CODE_ARRAY_UNDER_RANGE",
		51:   "CODE_ARRAY_OVER_RANGE",
		52:   "CODE_ARRAY_EMPTY",
		53:   "CODE_ARRAY_KEY_NOTFOUND",
		60:   "CODE_MAP_KEY_NOTFOUND",
		70:   "CODE_CONCURRENCY_LOCK_FAILED",
		71:   "CODE_CONCURRENCY_DEADLOCK",
		72:   "CODE_CONCURRENCY_RACE",
		90:   "CODE_FILESYSTEM_FILE_NOTFOUND",
		91:   "CODE_FILESYSTEM_DIRECTORY_NOTFOUND",
		92:   "CODE_FILESYSTEM_FILE_OPEN_FAILED",
		93:   "CODE_FILESYSTEM_FILE_CLOSE_FAILED",
		94:   "CODE_FILESYSTEM_FILE_READ_FAILED",
		95:   "CODE_FILESYSTEM_FILE_WRITE_FAILED",
		96:   "CODE_FILESYSTEM_DISK_FULL",
		100:  "CODE_NETWORK_CONNECTION_FAILED",
		101:  "CODE_NETWORK_CONNECTION_CLOSED",
		102:  "CODE_NETWORK_CONNECTION_TIMEOUT",
		103:  "CODE_NETWORK_CONNECTION_REFUSED",
		104:  "CODE_NETWORK_CONNECTION_ABORTED",
		105:  "CODE_NETWORK_CONNECTION_ALREADY_CONNECTED",
		106:  "CODE_NETWORK_CONNECTION_INVALID_URI",
		110:  "CODE_PROCESS_FORK_FAILED",
		111:  "CODE_PROCESS_EXEC_FAILED",
		112:  "CODE_PROCESS_WAIT_FAILED",
		113:  "CODE_PROCESS_KILL_FAILED",
		114:  "CODE_PROCESS_SIGNAL_FAILED",
		115:  "CODE_PROCESS_SIGNAL_NOT_SUPPORTED",
		120:  "CODE_MEMORY_ALLOCATION_FAILED",
		121:  "CODE_MEMORY_REALLOCATION_FAILED",
		122:  "CODE_MEMORY_FREE_FAILED",
		123:  "CODE_MEMORY_OUT_OF_MEMORY",
		130:  "CODE_SECURITY_UNAUTHENTICATED",
		131:  "CODE_SECURITY_UNAUTHORISED",
		132:  "CODE_SECURITY_PERMISSION_DENIED",
		133:  "CODE_SECURITY_INVALID_TOKEN",
		140:  "CODE_INPUT_NOTREADY",
		141:  "CODE_INPUT_DISCARDED",
		142:  "CODE_INPUT_UNKNOWN",
		150:  "CODE_SCREENRECORD_NOTREADY",
		151:  "CODE_SCREENRECORD_ALREADY_RECORDING",
		152:  "CODE_SCREENRECORD_NOTSTARTED",
		153:  "CODE_SCREENRECORD_MULTIPLE_RECORDING",
		154:  "CODE_SCREENRECORD_NOTFOUND",
		155:  "CODE_SCREENRECORD_NOTSUPPORTED",
		160:  "CODE_WEBRTC_PEERCONNECTION_FAILED",
		161:  "CODE_WEBRTC_CODEC_NOTSUPPORTED",
		200:  "CODE_DEVICE_NOTFOUND",
		999:  "CODE_COMMON_END",
		1000: "CODE_DOST_SUCCESS_BEGIN",
		1999: "CODE_DOST_END",
		2000: "CODE_HOST_AGENT_SUCCESS_BEGIN",
		2001: "CODE_HOST_AGENT_UNEXPECTED_ERROR",
		2002: "CODE_HOST_AGENT_INVALID_ENV",
		2003: "CODE_HOST_AGENT_PORT_IN_USE",
		2255: "CODE_HOST_AGENT_EXIT_CODE_END",
		2301: "CODE_HOST_AGENT_SIGHUP",
		2302: "CODE_HOST_AGENT_SIGINT",
		2303: "CODE_HOST_AGENT_SIGQUIT",
		2304: "CODE_HOST_AGENT_SIGILL",
		2305: "CODE_HOST_AGENT_SIGTRAP",
		2306: "CODE_HOST_AGENT_SIGABRT",
		2308: "CODE_HOST_AGENT_SIGFPE",
		2309: "CODE_HOST_AGENT_SIGKILL",
		2311: "CODE_HOST_AGENT_SIGSEGV",
		2313: "CODE_HOST_AGENT_SIGPIPE",
		2314: "CODE_HOST_AGENT_SIGALRM",
		2315: "CODE_HOST_AGENT_SIGTERM",
		2400: "CODE_HOST_AGENT_DEVICE_REQUEST_FAILED",
		2401: "CODE_HOST_AGENT_INVALID_TOKEN",
		2402: "CODE_HOST_AGENT_CONNECTION_REFUSED",
		2403: "CODE_HOST_AGENT_NOT_RUNNING",
		2404: "CODE_HOST_AGENT_REQUEST_FAILED",
		2999: "CODE_HOST_AGENT_END",
		3000: "CODE_DEVICE_SERVER_SUCCESS_BEGIN",
		3001: "CODE_DEVICE_SERVER_UNEXPECTED_ERROR",
		3002: "CODE_DEVICE_SERVER_INVALID_ENV",
		3003: "CODE_DEVICE_SERVER_PORT_IN_USE",
		3255: "CODE_DEVICE_SERVER_EXIT_CODE_END",
		3301: "CODE_DEVICE_SERVER_SIGHUP",
		3302: "CODE_DEVICE_SERVER_SIGINT",
		3303: "CODE_DEVICE_SERVER_SIGQUIT",
		3304: "CODE_DEVICE_SERVER_SIGILL",
		3305: "CODE_DEVICE_SERVER_SIGTRAP",
		3306: "CODE_DEVICE_SERVER_SIGABRT",
		3308: "CODE_DEVICE_SERVER_SIGFPE",
		3309: "CODE_DEVICE_SERVER_SIGKILL",
		3311: "CODE_DEVICE_SERVER_SIGSEGV",
		3313: "CODE_DEVICE_SERVER_SIGPIPE",
		3314: "CODE_DEVICE_SERVER_SIGALRM",
		3315: "CODE_DEVICE_SERVER_SIGTERM",
		3400: "CODE_DEVICE_SERVER_DEVICE_NOT_FOUND",
		3401: "CODE_DEVICE_SERVER_APPIUM_CONTEXT_NOT_FOUND",
		3402: "CODE_DEVICE_SERVER_GAMIUM_CONTEXT_NOT_FOUND",
		3403: "CODE_DEVICE_SERVER_APPIUM_CONTEXT_INFO_NOT_FOUND",
		3999: "CODE_DEVICE_SERVER_END",
		4000: "CODE_DEVICE_CONTROLLER_BEGIN",
		4001: "CODE_DEVICE_CONTROLLER_INPUT_NOTSUPPORTED",
		4002: "CODE_DEVICE_CONTROLLER_INPUT_PERMISSION_DENIED",
		4003: "CODE_DEVICE_CONTROLLER_INPUT_UNKNOWN",
		4999: "CODE_DEVICE_CONTROLLER_END",
		5000: "CODE_ANDROID_DEVICE_AGENT_BEGIN",
		5001: "CODE_ANDROID_DEVICE_AGENT_INPUT_UNKNOWN",
		5002: "CODE_ANDROID_DEVICE_AGENT_CLIPBOARD_NOTAVAILABLE",
		5999: "CODE_ANDROID_DEVICE_AGENT_END",
	}
	Code_value = map[string]int32{
		"CODE_SUCCESS_COMMON_BEGIN_UNSPECIFIED":            0,
		"CODE_UNEXPECTED_ERROR":                            1,
		"CODE_NUMBER_UNDER_RANGE":                          2,
		"CODE_NUMBER_OVER_RANGE":                           3,
		"CODE_NUMBER_ZERO":                                 4,
		"CODE_NUMBER_NULL":                                 5,
		"CODE_STRING_UNDER_RANGE":                          10,
		"CODE_STRING_OVER_RANGE":                           11,
		"CODE_STRING_EMPTY":                                12,
		"CODE_STRING_NULL":                                 13,
		"CODE_STRING_PARSE_FAILED":                         14,
		"CODE_STRING_INVALID_CHARACTER":                    15,
		"CODE_STRING_ENCODING_FAILED":                      16,
		"CODE_STRING_DECODING_FAILED":                      17,
		"CODE_STRING_CONVERSION_FAILED":                    18,
		"CODE_STRING_INVALID_SYNTAX":                       19,
		"CODE_BINARY_UNDER_RANGE":                          20,
		"CODE_BINARY_OVER_RANGE":                           21,
		"CODE_BINARY_EMPTY":                                22,
		"CODE_BINARY_NULL":                                 23,
		"CODE_BINARY_ENCODING_FAILED":                      24,
		"CODE_BINARY_DECODING_FAILED":                      25,
		"CODE_BINARY_CONVERSION_FAILED":                    26,
		"CODE_BINARY_VALIDATION_FAILED":                    27,
		"CODE_DATE_INVALID_YEAR":                           30,
		"CODE_DATE_INVALID_MONTH":                          31,
		"CODE_DATE_INVALID_DAY":                            32,
		"CODE_DATE_INVALID_HOUR":                           33,
		"CODE_DATE_INVALID_MINITE":                         34,
		"CODE_DATE_INVALID_SECOND":                         35,
		"CODE_TIME_INVALID_TIMEZONE":                       40,
		"CODE_ARRAY_UNDER_RANGE":                           50,
		"CODE_ARRAY_OVER_RANGE":                            51,
		"CODE_ARRAY_EMPTY":                                 52,
		"CODE_ARRAY_KEY_NOTFOUND":                          53,
		"CODE_MAP_KEY_NOTFOUND":                            60,
		"CODE_CONCURRENCY_LOCK_FAILED":                     70,
		"CODE_CONCURRENCY_DEADLOCK":                        71,
		"CODE_CONCURRENCY_RACE":                            72,
		"CODE_FILESYSTEM_FILE_NOTFOUND":                    90,
		"CODE_FILESYSTEM_DIRECTORY_NOTFOUND":               91,
		"CODE_FILESYSTEM_FILE_OPEN_FAILED":                 92,
		"CODE_FILESYSTEM_FILE_CLOSE_FAILED":                93,
		"CODE_FILESYSTEM_FILE_READ_FAILED":                 94,
		"CODE_FILESYSTEM_FILE_WRITE_FAILED":                95,
		"CODE_FILESYSTEM_DISK_FULL":                        96,
		"CODE_NETWORK_CONNECTION_FAILED":                   100,
		"CODE_NETWORK_CONNECTION_CLOSED":                   101,
		"CODE_NETWORK_CONNECTION_TIMEOUT":                  102,
		"CODE_NETWORK_CONNECTION_REFUSED":                  103,
		"CODE_NETWORK_CONNECTION_ABORTED":                  104,
		"CODE_NETWORK_CONNECTION_ALREADY_CONNECTED":        105,
		"CODE_NETWORK_CONNECTION_INVALID_URI":              106,
		"CODE_PROCESS_FORK_FAILED":                         110,
		"CODE_PROCESS_EXEC_FAILED":                         111,
		"CODE_PROCESS_WAIT_FAILED":                         112,
		"CODE_PROCESS_KILL_FAILED":                         113,
		"CODE_PROCESS_SIGNAL_FAILED":                       114,
		"CODE_PROCESS_SIGNAL_NOT_SUPPORTED":                115,
		"CODE_MEMORY_ALLOCATION_FAILED":                    120,
		"CODE_MEMORY_REALLOCATION_FAILED":                  121,
		"CODE_MEMORY_FREE_FAILED":                          122,
		"CODE_MEMORY_OUT_OF_MEMORY":                        123,
		"CODE_SECURITY_UNAUTHENTICATED":                    130,
		"CODE_SECURITY_UNAUTHORISED":                       131,
		"CODE_SECURITY_PERMISSION_DENIED":                  132,
		"CODE_SECURITY_INVALID_TOKEN":                      133,
		"CODE_INPUT_NOTREADY":                              140,
		"CODE_INPUT_DISCARDED":                             141,
		"CODE_INPUT_UNKNOWN":                               142,
		"CODE_SCREENRECORD_NOTREADY":                       150,
		"CODE_SCREENRECORD_ALREADY_RECORDING":              151,
		"CODE_SCREENRECORD_NOTSTARTED":                     152,
		"CODE_SCREENRECORD_MULTIPLE_RECORDING":             153,
		"CODE_SCREENRECORD_NOTFOUND":                       154,
		"CODE_SCREENRECORD_NOTSUPPORTED":                   155,
		"CODE_WEBRTC_PEERCONNECTION_FAILED":                160,
		"CODE_WEBRTC_CODEC_NOTSUPPORTED":                   161,
		"CODE_DEVICE_NOTFOUND":                             200,
		"CODE_COMMON_END":                                  999,
		"CODE_DOST_SUCCESS_BEGIN":                          1000,
		"CODE_DOST_END":                                    1999,
		"CODE_HOST_AGENT_SUCCESS_BEGIN":                    2000,
		"CODE_HOST_AGENT_UNEXPECTED_ERROR":                 2001,
		"CODE_HOST_AGENT_INVALID_ENV":                      2002,
		"CODE_HOST_AGENT_PORT_IN_USE":                      2003,
		"CODE_HOST_AGENT_EXIT_CODE_END":                    2255,
		"CODE_HOST_AGENT_SIGHUP":                           2301,
		"CODE_HOST_AGENT_SIGINT":                           2302,
		"CODE_HOST_AGENT_SIGQUIT":                          2303,
		"CODE_HOST_AGENT_SIGILL":                           2304,
		"CODE_HOST_AGENT_SIGTRAP":                          2305,
		"CODE_HOST_AGENT_SIGABRT":                          2306,
		"CODE_HOST_AGENT_SIGFPE":                           2308,
		"CODE_HOST_AGENT_SIGKILL":                          2309,
		"CODE_HOST_AGENT_SIGSEGV":                          2311,
		"CODE_HOST_AGENT_SIGPIPE":                          2313,
		"CODE_HOST_AGENT_SIGALRM":                          2314,
		"CODE_HOST_AGENT_SIGTERM":                          2315,
		"CODE_HOST_AGENT_DEVICE_REQUEST_FAILED":            2400,
		"CODE_HOST_AGENT_INVALID_TOKEN":                    2401,
		"CODE_HOST_AGENT_CONNECTION_REFUSED":               2402,
		"CODE_HOST_AGENT_NOT_RUNNING":                      2403,
		"CODE_HOST_AGENT_REQUEST_FAILED":                   2404,
		"CODE_HOST_AGENT_END":                              2999,
		"CODE_DEVICE_SERVER_SUCCESS_BEGIN":                 3000,
		"CODE_DEVICE_SERVER_UNEXPECTED_ERROR":              3001,
		"CODE_DEVICE_SERVER_INVALID_ENV":                   3002,
		"CODE_DEVICE_SERVER_PORT_IN_USE":                   3003,
		"CODE_DEVICE_SERVER_EXIT_CODE_END":                 3255,
		"CODE_DEVICE_SERVER_SIGHUP":                        3301,
		"CODE_DEVICE_SERVER_SIGINT":                        3302,
		"CODE_DEVICE_SERVER_SIGQUIT":                       3303,
		"CODE_DEVICE_SERVER_SIGILL":                        3304,
		"CODE_DEVICE_SERVER_SIGTRAP":                       3305,
		"CODE_DEVICE_SERVER_SIGABRT":                       3306,
		"CODE_DEVICE_SERVER_SIGFPE":                        3308,
		"CODE_DEVICE_SERVER_SIGKILL":                       3309,
		"CODE_DEVICE_SERVER_SIGSEGV":                       3311,
		"CODE_DEVICE_SERVER_SIGPIPE":                       3313,
		"CODE_DEVICE_SERVER_SIGALRM":                       3314,
		"CODE_DEVICE_SERVER_SIGTERM":                       3315,
		"CODE_DEVICE_SERVER_DEVICE_NOT_FOUND":              3400,
		"CODE_DEVICE_SERVER_APPIUM_CONTEXT_NOT_FOUND":      3401,
		"CODE_DEVICE_SERVER_GAMIUM_CONTEXT_NOT_FOUND":      3402,
		"CODE_DEVICE_SERVER_APPIUM_CONTEXT_INFO_NOT_FOUND": 3403,
		"CODE_DEVICE_SERVER_END":                           3999,
		"CODE_DEVICE_CONTROLLER_BEGIN":                     4000,
		"CODE_DEVICE_CONTROLLER_INPUT_NOTSUPPORTED":        4001,
		"CODE_DEVICE_CONTROLLER_INPUT_PERMISSION_DENIED":   4002,
		"CODE_DEVICE_CONTROLLER_INPUT_UNKNOWN":             4003,
		"CODE_DEVICE_CONTROLLER_END":                       4999,
		"CODE_ANDROID_DEVICE_AGENT_BEGIN":                  5000,
		"CODE_ANDROID_DEVICE_AGENT_INPUT_UNKNOWN":          5001,
		"CODE_ANDROID_DEVICE_AGENT_CLIPBOARD_NOTAVAILABLE": 5002,
		"CODE_ANDROID_DEVICE_AGENT_END":                    5999,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_outer_errors_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_outer_errors_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_outer_errors_proto_rawDescGZIP(), []int{0}
}

type ErrorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code             `protobuf:"varint,1,opt,name=code,proto3,enum=outer.Code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details *structpb.Struct `protobuf:"bytes,3,opt,name=details,proto3,oneof" json:"details,omitempty"`
}

func (x *ErrorResult) Reset() {
	*x = ErrorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outer_errors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult) ProtoMessage() {}

func (x *ErrorResult) ProtoReflect() protoreflect.Message {
	mi := &file_outer_errors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult.ProtoReflect.Descriptor instead.
func (*ErrorResult) Descriptor() ([]byte, []int) {
	return file_outer_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorResult) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_CODE_SUCCESS_COMMON_BEGIN_UNSPECIFIED
}

func (x *ErrorResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResult) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_outer_errors_proto protoreflect.FileDescriptor

var file_outer_errors_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x0b, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2a, 0xd8, 0x23, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f,
	0x5a, 0x45, 0x52, 0x4f, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x44, 0x45,
	0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0e,
	0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45,
	0x52, 0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x10, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x11, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x12, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x10, 0x13, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x14, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49,
	0x4e, 0x41, 0x52, 0x59, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x15, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x17, 0x12, 0x1f,
	0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x45, 0x4e,
	0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x18, 0x12,
	0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f, 0x44,
	0x45, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x19,
	0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x1a, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x41,
	0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x1b, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x59, 0x45, 0x41, 0x52,
	0x10, 0x1e, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x1f, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x20, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x48, 0x4f, 0x55, 0x52, 0x10, 0x21, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x4e, 0x49,
	0x54, 0x45, 0x10, 0x22, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x10, 0x23, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5a, 0x4f, 0x4e, 0x45,
	0x10, 0x28, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x32, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x4f, 0x56, 0x45,
	0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x33, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x34, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x35, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4e, 0x4f, 0x54,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x3c, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x4b,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x46, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x44, 0x45,
	0x41, 0x44, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x47, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x52, 0x41, 0x43,
	0x45, 0x10, 0x48, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x5a, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46,
	0x49, 0x4c, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x5b, 0x12, 0x24,
	0x0a, 0x20, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x5c, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x5d, 0x12, 0x24, 0x0a, 0x20, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x5e, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x5f, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x49, 0x53, 0x4b,
	0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x60, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x65, 0x12,
	0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x10, 0x66, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0x67, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x68, 0x12, 0x2d,
	0x0a, 0x29, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x69, 0x12, 0x27, 0x0a,
	0x23, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x55, 0x52, 0x49, 0x10, 0x6a, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x6f, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x70,
	0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x71, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x72, 0x12, 0x25,
	0x0a, 0x21, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x45,
	0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x78, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x79, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x52, 0x45,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x7a, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46,
	0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x7b, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54,
	0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x82, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55,
	0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x53, 0x45, 0x44, 0x10, 0x83, 0x01, 0x12, 0x24,
	0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0x84, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x10, 0x85, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x8c, 0x01,
	0x12, 0x19, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x44,
	0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x45, 0x44, 0x10, 0x8d, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x8e, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x52,
	0x45, 0x45, 0x4e, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x10, 0x96, 0x01, 0x12, 0x28, 0x0a, 0x23, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43,
	0x52, 0x45, 0x45, 0x4e, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x97, 0x01, 0x12,
	0x21, 0x0a, 0x1c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x98, 0x01, 0x12, 0x29, 0x0a, 0x24, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x52, 0x45, 0x45,
	0x4e, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x99, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x52, 0x45, 0x43, 0x4f,
	0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x9a, 0x01, 0x12, 0x23,
	0x0a, 0x1e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x52, 0x45, 0x43,
	0x4f, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x10, 0x9b, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x45, 0x42, 0x52,
	0x54, 0x43, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xa0, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x57, 0x45, 0x42, 0x52, 0x54, 0x43, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x43,
	0x5f, 0x4e, 0x4f, 0x54, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xa1, 0x01,
	0x12, 0x19, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc8, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xe7,
	0x07, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x53, 0x54, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xe8, 0x07, 0x12,
	0x12, 0x0a, 0x0d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x53, 0x54, 0x5f, 0x45, 0x4e, 0x44,
	0x10, 0xcf, 0x0f, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42,
	0x45, 0x47, 0x49, 0x4e, 0x10, 0xd0, 0x0f, 0x12, 0x25, 0x0a, 0x20, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xd1, 0x0f, 0x12, 0x20,
	0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x56, 0x10, 0xd2, 0x0f,
	0x12, 0x20, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10,
	0xd3, 0x0f, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x4e, 0x44, 0x10, 0xcf, 0x11, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48,
	0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x48, 0x55, 0x50,
	0x10, 0xfd, 0x11, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x49, 0x4e, 0x54, 0x10, 0xfe, 0x11,
	0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x51, 0x55, 0x49, 0x54, 0x10, 0xff, 0x11, 0x12, 0x1b,
	0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x49, 0x47, 0x49, 0x4c, 0x4c, 0x10, 0x80, 0x12, 0x12, 0x1c, 0x0a, 0x17, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x49, 0x47, 0x54, 0x52, 0x41, 0x50, 0x10, 0x81, 0x12, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47,
	0x41, 0x42, 0x52, 0x54, 0x10, 0x82, 0x12, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x46, 0x50,
	0x45, 0x10, 0x84, 0x12, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53,
	0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4b, 0x49, 0x4c, 0x4c, 0x10,
	0x85, 0x12, 0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x53, 0x45, 0x47, 0x56, 0x10, 0x87, 0x12,
	0x12, 0x1c, 0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x50, 0x49, 0x50, 0x45, 0x10, 0x89, 0x12, 0x12, 0x1c,
	0x0a, 0x17, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x49, 0x47, 0x41, 0x4c, 0x52, 0x4d, 0x10, 0x8a, 0x12, 0x12, 0x1c, 0x0a, 0x17,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x49, 0x47, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x8b, 0x12, 0x12, 0x2a, 0x0a, 0x25, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0xe0, 0x12, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48,
	0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0xe1, 0x12, 0x12, 0x27, 0x0a, 0x22, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x44,
	0x10, 0xe2, 0x12, 0x12, 0x20, 0x0a, 0x1b, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0xe3, 0x12, 0x12, 0x23, 0x0a, 0x1e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xe4, 0x12, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0xb7, 0x17, 0x12, 0x25, 0x0a, 0x20, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xb8, 0x17, 0x12, 0x28, 0x0a, 0x23, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0xb9, 0x17, 0x12, 0x23, 0x0a, 0x1e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x56, 0x10, 0xba, 0x17, 0x12, 0x23, 0x0a, 0x1e, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0xbb, 0x17, 0x12,
	0x25, 0x0a, 0x20, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x4e, 0x44, 0x10, 0xb7, 0x19, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47,
	0x48, 0x55, 0x50, 0x10, 0xe5, 0x19, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47,
	0x49, 0x4e, 0x54, 0x10, 0xe6, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47,
	0x51, 0x55, 0x49, 0x54, 0x10, 0xe7, 0x19, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49,
	0x47, 0x49, 0x4c, 0x4c, 0x10, 0xe8, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x49,
	0x47, 0x54, 0x52, 0x41, 0x50, 0x10, 0xe9, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53,
	0x49, 0x47, 0x41, 0x42, 0x52, 0x54, 0x10, 0xea, 0x19, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x53, 0x49, 0x47, 0x46, 0x50, 0x45, 0x10, 0xec, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x53, 0x49, 0x47, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0xed, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x53, 0x49, 0x47, 0x53, 0x45, 0x47, 0x56, 0x10, 0xef, 0x19, 0x12, 0x1f, 0x0a, 0x1a, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x53, 0x49, 0x47, 0x50, 0x49, 0x50, 0x45, 0x10, 0xf1, 0x19, 0x12, 0x1f, 0x0a, 0x1a,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x53, 0x49, 0x47, 0x41, 0x4c, 0x52, 0x4d, 0x10, 0xf2, 0x19, 0x12, 0x1f, 0x0a,
	0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47, 0x54, 0x45, 0x52, 0x4d, 0x10, 0xf3, 0x19, 0x12, 0x28,
	0x0a, 0x23, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc8, 0x1a, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x41,
	0x50, 0x50, 0x49, 0x55, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc9, 0x1a, 0x12, 0x30, 0x0a, 0x2b, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x47, 0x41, 0x4d, 0x49, 0x55, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xca, 0x1a, 0x12, 0x35, 0x0a, 0x30,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x49, 0x55, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58,
	0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0xcb, 0x1a, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x9f, 0x1f,
	0x12, 0x21, 0x0a, 0x1c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e,
	0x10, 0xa0, 0x1f, 0x12, 0x2e, 0x0a, 0x29, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x10, 0xa1, 0x1f, 0x12, 0x33, 0x0a, 0x2e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xa2, 0x1f, 0x12, 0x29, 0x0a, 0x24, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0xa3, 0x1f, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0x87, 0x27, 0x12, 0x24, 0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x44,
	0x52, 0x4f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x88, 0x27, 0x12, 0x2c, 0x0a, 0x27, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x89, 0x27, 0x12, 0x35, 0x0a, 0x30, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x50, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f,
	0x4e, 0x4f, 0x54, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x8a, 0x27, 0x12,
	0x22, 0x0a, 0x1d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x44,
	0x10, 0xef, 0x2e, 0x42, 0x5e, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5a, 0x39, 0x67, 0x6f, 0x2d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_outer_errors_proto_rawDescOnce sync.Once
	file_outer_errors_proto_rawDescData = file_outer_errors_proto_rawDesc
)

func file_outer_errors_proto_rawDescGZIP() []byte {
	file_outer_errors_proto_rawDescOnce.Do(func() {
		file_outer_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_outer_errors_proto_rawDescData)
	})
	return file_outer_errors_proto_rawDescData
}

var file_outer_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_outer_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_outer_errors_proto_goTypes = []interface{}{
	(Code)(0),               // 0: outer.Code
	(*ErrorResult)(nil),     // 1: outer.ErrorResult
	(*structpb.Struct)(nil), // 2: google.protobuf.Struct
}
var file_outer_errors_proto_depIdxs = []int32{
	0, // 0: outer.ErrorResult.code:type_name -> outer.Code
	2, // 1: outer.ErrorResult.details:type_name -> google.protobuf.Struct
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_outer_errors_proto_init() }
func file_outer_errors_proto_init() {
	if File_outer_errors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_outer_errors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_outer_errors_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outer_errors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outer_errors_proto_goTypes,
		DependencyIndexes: file_outer_errors_proto_depIdxs,
		EnumInfos:         file_outer_errors_proto_enumTypes,
		MessageInfos:      file_outer_errors_proto_msgTypes,
	}.Build()
	File_outer_errors_proto = out.File
	file_outer_errors_proto_rawDesc = nil
	file_outer_errors_proto_goTypes = nil
	file_outer_errors_proto_depIdxs = nil
}
