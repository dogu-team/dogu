// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: inner/params/dc_ida.proto

package params

import (
	types "go-device-controller/types/protocol/generated/proto/inner/types"
	outer "go-device-controller/types/protocol/generated/proto/outer"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DcIdaParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq uint32 `protobuf:"fixed32,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// Types that are assignable to Value:
	//	*DcIdaParam_DcIdaRunappParam
	//	*DcIdaParam_DcIdaGetSystemInfoParam
	//	*DcIdaParam_DcIdaIsPortListeningParam
	//	*DcIdaParam_DcIdaQueryProfileParam
	//	*DcIdaParam_DcGdcDaControlParam
	//	*DcIdaParam_DcIdaSwitchInputBlockParam
	//	*DcIdaParam_DcIdaQueryAlertParam
	Value isDcIdaParam_Value `protobuf_oneof:"value"`
}

func (x *DcIdaParam) Reset() {
	*x = DcIdaParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_ida_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdaParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdaParam) ProtoMessage() {}

func (x *DcIdaParam) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_ida_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdaParam.ProtoReflect.Descriptor instead.
func (*DcIdaParam) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_ida_proto_rawDescGZIP(), []int{0}
}

func (x *DcIdaParam) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (m *DcIdaParam) GetValue() isDcIdaParam_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaRunappParam() *types.DcIdaRunAppParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaRunappParam); ok {
		return x.DcIdaRunappParam
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaGetSystemInfoParam() *types.DcIdaGetSystemInfoParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaGetSystemInfoParam); ok {
		return x.DcIdaGetSystemInfoParam
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaIsPortListeningParam() *types.DcIdaIsPortListeningParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaIsPortListeningParam); ok {
		return x.DcIdaIsPortListeningParam
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaQueryProfileParam() *types.DcIdaQueryProfileParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaQueryProfileParam); ok {
		return x.DcIdaQueryProfileParam
	}
	return nil
}

func (x *DcIdaParam) GetDcGdcDaControlParam() *types.CfGdcDaControlParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcGdcDaControlParam); ok {
		return x.DcGdcDaControlParam
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaSwitchInputBlockParam() *types.DcIdaSwitchInputBlockParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaSwitchInputBlockParam); ok {
		return x.DcIdaSwitchInputBlockParam
	}
	return nil
}

func (x *DcIdaParam) GetDcIdaQueryAlertParam() *types.DcIdaQueryAlertParam {
	if x, ok := x.GetValue().(*DcIdaParam_DcIdaQueryAlertParam); ok {
		return x.DcIdaQueryAlertParam
	}
	return nil
}

type isDcIdaParam_Value interface {
	isDcIdaParam_Value()
}

type DcIdaParam_DcIdaRunappParam struct {
	DcIdaRunappParam *types.DcIdaRunAppParam `protobuf:"bytes,10,opt,name=dc_ida_runapp_param,json=dcIdaRunappParam,proto3,oneof"`
}

type DcIdaParam_DcIdaGetSystemInfoParam struct {
	DcIdaGetSystemInfoParam *types.DcIdaGetSystemInfoParam `protobuf:"bytes,11,opt,name=dc_ida_get_system_info_param,json=dcIdaGetSystemInfoParam,proto3,oneof"`
}

type DcIdaParam_DcIdaIsPortListeningParam struct {
	DcIdaIsPortListeningParam *types.DcIdaIsPortListeningParam `protobuf:"bytes,12,opt,name=dc_ida_is_port_listening_param,json=dcIdaIsPortListeningParam,proto3,oneof"`
}

type DcIdaParam_DcIdaQueryProfileParam struct {
	DcIdaQueryProfileParam *types.DcIdaQueryProfileParam `protobuf:"bytes,13,opt,name=dc_ida_query_profile_param,json=dcIdaQueryProfileParam,proto3,oneof"`
}

type DcIdaParam_DcGdcDaControlParam struct {
	DcGdcDaControlParam *types.CfGdcDaControlParam `protobuf:"bytes,14,opt,name=dc_gdc_da_control_param,json=dcGdcDaControlParam,proto3,oneof"`
}

type DcIdaParam_DcIdaSwitchInputBlockParam struct {
	DcIdaSwitchInputBlockParam *types.DcIdaSwitchInputBlockParam `protobuf:"bytes,15,opt,name=dc_ida_switch_input_block_param,json=dcIdaSwitchInputBlockParam,proto3,oneof"`
}

type DcIdaParam_DcIdaQueryAlertParam struct {
	DcIdaQueryAlertParam *types.DcIdaQueryAlertParam `protobuf:"bytes,16,opt,name=dc_ida_query_alert_param,json=dcIdaQueryAlertParam,proto3,oneof"`
}

func (*DcIdaParam_DcIdaRunappParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcIdaGetSystemInfoParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcIdaIsPortListeningParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcIdaQueryProfileParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcGdcDaControlParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcIdaSwitchInputBlockParam) isDcIdaParam_Value() {}

func (*DcIdaParam_DcIdaQueryAlertParam) isDcIdaParam_Value() {}

type DcIdaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq   uint32             `protobuf:"fixed32,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Error *outer.ErrorResult `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	// Types that are assignable to Value:
	//	*DcIdaResult_DcIdaRunappResult
	//	*DcIdaResult_DcIdaGetSystemInfoResult
	//	*DcIdaResult_DcIdaIsPortListeningResult
	//	*DcIdaResult_DcIdaQueryProfileResult
	//	*DcIdaResult_DcGdcDaControlResult
	//	*DcIdaResult_DcIdaSwitchInputBlockResult
	//	*DcIdaResult_DcIdaQueryAlertResult
	Value isDcIdaResult_Value `protobuf_oneof:"value"`
}

func (x *DcIdaResult) Reset() {
	*x = DcIdaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_ida_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdaResult) ProtoMessage() {}

func (x *DcIdaResult) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_ida_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdaResult.ProtoReflect.Descriptor instead.
func (*DcIdaResult) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_ida_proto_rawDescGZIP(), []int{1}
}

func (x *DcIdaResult) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *DcIdaResult) GetError() *outer.ErrorResult {
	if x != nil {
		return x.Error
	}
	return nil
}

func (m *DcIdaResult) GetValue() isDcIdaResult_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaRunappResult() *types.DcIdaRunAppResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaRunappResult); ok {
		return x.DcIdaRunappResult
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaGetSystemInfoResult() *types.DcIdaGetSystemInfoResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaGetSystemInfoResult); ok {
		return x.DcIdaGetSystemInfoResult
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaIsPortListeningResult() *types.DcIdaIsPortListeningResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaIsPortListeningResult); ok {
		return x.DcIdaIsPortListeningResult
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaQueryProfileResult() *types.DcIdaQueryProfileResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaQueryProfileResult); ok {
		return x.DcIdaQueryProfileResult
	}
	return nil
}

func (x *DcIdaResult) GetDcGdcDaControlResult() *types.CfGdcDaControlResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcGdcDaControlResult); ok {
		return x.DcGdcDaControlResult
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaSwitchInputBlockResult() *types.DcIdaSwitchInputBlockResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaSwitchInputBlockResult); ok {
		return x.DcIdaSwitchInputBlockResult
	}
	return nil
}

func (x *DcIdaResult) GetDcIdaQueryAlertResult() *types.DcIdaQueryAlertResult {
	if x, ok := x.GetValue().(*DcIdaResult_DcIdaQueryAlertResult); ok {
		return x.DcIdaQueryAlertResult
	}
	return nil
}

type isDcIdaResult_Value interface {
	isDcIdaResult_Value()
}

type DcIdaResult_DcIdaRunappResult struct {
	DcIdaRunappResult *types.DcIdaRunAppResult `protobuf:"bytes,10,opt,name=dc_ida_runapp_result,json=dcIdaRunappResult,proto3,oneof"`
}

type DcIdaResult_DcIdaGetSystemInfoResult struct {
	DcIdaGetSystemInfoResult *types.DcIdaGetSystemInfoResult `protobuf:"bytes,11,opt,name=dc_ida_get_system_info_result,json=dcIdaGetSystemInfoResult,proto3,oneof"`
}

type DcIdaResult_DcIdaIsPortListeningResult struct {
	DcIdaIsPortListeningResult *types.DcIdaIsPortListeningResult `protobuf:"bytes,12,opt,name=dc_ida_is_port_listening_result,json=dcIdaIsPortListeningResult,proto3,oneof"`
}

type DcIdaResult_DcIdaQueryProfileResult struct {
	DcIdaQueryProfileResult *types.DcIdaQueryProfileResult `protobuf:"bytes,13,opt,name=dc_ida_query_profile_result,json=dcIdaQueryProfileResult,proto3,oneof"`
}

type DcIdaResult_DcGdcDaControlResult struct {
	DcGdcDaControlResult *types.CfGdcDaControlResult `protobuf:"bytes,14,opt,name=dc_gdc_da_control_result,json=dcGdcDaControlResult,proto3,oneof"`
}

type DcIdaResult_DcIdaSwitchInputBlockResult struct {
	DcIdaSwitchInputBlockResult *types.DcIdaSwitchInputBlockResult `protobuf:"bytes,15,opt,name=dc_ida_switch_input_block_result,json=dcIdaSwitchInputBlockResult,proto3,oneof"`
}

type DcIdaResult_DcIdaQueryAlertResult struct {
	DcIdaQueryAlertResult *types.DcIdaQueryAlertResult `protobuf:"bytes,16,opt,name=dc_ida_query_alert_result,json=dcIdaQueryAlertResult,proto3,oneof"`
}

func (*DcIdaResult_DcIdaRunappResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcIdaGetSystemInfoResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcIdaIsPortListeningResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcIdaQueryProfileResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcGdcDaControlResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcIdaSwitchInputBlockResult) isDcIdaResult_Value() {}

func (*DcIdaResult_DcIdaQueryAlertResult) isDcIdaResult_Value() {}

type DcIdaParamList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*DcIdaParam `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *DcIdaParamList) Reset() {
	*x = DcIdaParamList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_ida_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdaParamList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdaParamList) ProtoMessage() {}

func (x *DcIdaParamList) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_ida_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdaParamList.ProtoReflect.Descriptor instead.
func (*DcIdaParamList) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_ida_proto_rawDescGZIP(), []int{2}
}

func (x *DcIdaParamList) GetParams() []*DcIdaParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type DcIdaResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*DcIdaResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *DcIdaResultList) Reset() {
	*x = DcIdaResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_ida_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdaResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdaResultList) ProtoMessage() {}

func (x *DcIdaResultList) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_ida_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdaResultList.ProtoReflect.Descriptor instead.
func (*DcIdaResultList) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_ida_proto_rawDescGZIP(), []int{3}
}

func (x *DcIdaResultList) GetResults() []*DcIdaResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_inner_params_dc_ida_proto protoreflect.FileDescriptor

var file_inner_params_dc_ida_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x64,
	0x63, 0x5f, 0x69, 0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x66, 0x5f, 0x67, 0x64, 0x63, 0x5f, 0x64, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x05, 0x0a, 0x0a, 0x44, 0x63, 0x49, 0x64, 0x61, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x13, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f,
	0x72, 0x75, 0x6e, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x52, 0x75, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x10, 0x64, 0x63, 0x49, 0x64, 0x61, 0x52, 0x75, 0x6e, 0x61, 0x70, 0x70,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x65, 0x0a, 0x1c, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x17, 0x64, 0x63, 0x49, 0x64, 0x61, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x6b, 0x0a, 0x1e,
	0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x49, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x19,
	0x64, 0x63, 0x49, 0x64, 0x61, 0x49, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x61, 0x0a, 0x1a, 0x64, 0x63, 0x5f,
	0x69, 0x64, 0x61, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64,
	0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x16, 0x64, 0x63, 0x49, 0x64, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x58, 0x0a, 0x17,
	0x64, 0x63, 0x5f, 0x67, 0x64, 0x63, 0x5f, 0x64, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x66, 0x47, 0x64,
	0x63, 0x44, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48,
	0x00, 0x52, 0x13, 0x64, 0x63, 0x47, 0x64, 0x63, 0x44, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x6e, 0x0a, 0x1f, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63,
	0x49, 0x64, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x63, 0x49, 0x64,
	0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x5b, 0x0a, 0x18, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x64,
	0x63, 0x49, 0x64, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa4, 0x06, 0x0a,
	0x0b, 0x44, 0x63, 0x49, 0x64, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a,
	0x14, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x72, 0x75, 0x6e, 0x61, 0x70, 0x70, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x52,
	0x75, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x63, 0x49, 0x64, 0x61, 0x52, 0x75, 0x6e, 0x61, 0x70, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x68, 0x0a, 0x1d, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x18, 0x64, 0x63, 0x49, 0x64, 0x61, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a, 0x1f, 0x64, 0x63,
	0x5f, 0x69, 0x64, 0x61, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x49, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a,
	0x64, 0x63, 0x49, 0x64, 0x61, 0x49, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x64, 0x0a, 0x1b, 0x64, 0x63,
	0x5f, 0x69, 0x64, 0x61, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63,
	0x49, 0x64, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x64, 0x63, 0x49, 0x64, 0x61, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x5b, 0x0a, 0x18, 0x64, 0x63, 0x5f, 0x67, 0x64, 0x63, 0x5f, 0x64, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x43, 0x66, 0x47, 0x64, 0x63, 0x44, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x14, 0x64, 0x63, 0x47, 0x64, 0x63, 0x44, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x71, 0x0a,
	0x20, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x1b, 0x64, 0x63, 0x49, 0x64, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x5e, 0x0a, 0x19, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x64, 0x63, 0x49, 0x64, 0x61,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x0e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0f, 0x44, 0x63, 0x49, 0x64, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42,
	0x6c, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5a, 0x40, 0x67, 0x6f, 0x2d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inner_params_dc_ida_proto_rawDescOnce sync.Once
	file_inner_params_dc_ida_proto_rawDescData = file_inner_params_dc_ida_proto_rawDesc
)

func file_inner_params_dc_ida_proto_rawDescGZIP() []byte {
	file_inner_params_dc_ida_proto_rawDescOnce.Do(func() {
		file_inner_params_dc_ida_proto_rawDescData = protoimpl.X.CompressGZIP(file_inner_params_dc_ida_proto_rawDescData)
	})
	return file_inner_params_dc_ida_proto_rawDescData
}

var file_inner_params_dc_ida_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_inner_params_dc_ida_proto_goTypes = []interface{}{
	(*DcIdaParam)(nil),                        // 0: inner.params.DcIdaParam
	(*DcIdaResult)(nil),                       // 1: inner.params.DcIdaResult
	(*DcIdaParamList)(nil),                    // 2: inner.params.DcIdaParamList
	(*DcIdaResultList)(nil),                   // 3: inner.params.DcIdaResultList
	(*types.DcIdaRunAppParam)(nil),            // 4: inner.types.DcIdaRunAppParam
	(*types.DcIdaGetSystemInfoParam)(nil),     // 5: inner.types.DcIdaGetSystemInfoParam
	(*types.DcIdaIsPortListeningParam)(nil),   // 6: inner.types.DcIdaIsPortListeningParam
	(*types.DcIdaQueryProfileParam)(nil),      // 7: inner.types.DcIdaQueryProfileParam
	(*types.CfGdcDaControlParam)(nil),         // 8: inner.types.CfGdcDaControlParam
	(*types.DcIdaSwitchInputBlockParam)(nil),  // 9: inner.types.DcIdaSwitchInputBlockParam
	(*types.DcIdaQueryAlertParam)(nil),        // 10: inner.types.DcIdaQueryAlertParam
	(*outer.ErrorResult)(nil),                 // 11: outer.ErrorResult
	(*types.DcIdaRunAppResult)(nil),           // 12: inner.types.DcIdaRunAppResult
	(*types.DcIdaGetSystemInfoResult)(nil),    // 13: inner.types.DcIdaGetSystemInfoResult
	(*types.DcIdaIsPortListeningResult)(nil),  // 14: inner.types.DcIdaIsPortListeningResult
	(*types.DcIdaQueryProfileResult)(nil),     // 15: inner.types.DcIdaQueryProfileResult
	(*types.CfGdcDaControlResult)(nil),        // 16: inner.types.CfGdcDaControlResult
	(*types.DcIdaSwitchInputBlockResult)(nil), // 17: inner.types.DcIdaSwitchInputBlockResult
	(*types.DcIdaQueryAlertResult)(nil),       // 18: inner.types.DcIdaQueryAlertResult
}
var file_inner_params_dc_ida_proto_depIdxs = []int32{
	4,  // 0: inner.params.DcIdaParam.dc_ida_runapp_param:type_name -> inner.types.DcIdaRunAppParam
	5,  // 1: inner.params.DcIdaParam.dc_ida_get_system_info_param:type_name -> inner.types.DcIdaGetSystemInfoParam
	6,  // 2: inner.params.DcIdaParam.dc_ida_is_port_listening_param:type_name -> inner.types.DcIdaIsPortListeningParam
	7,  // 3: inner.params.DcIdaParam.dc_ida_query_profile_param:type_name -> inner.types.DcIdaQueryProfileParam
	8,  // 4: inner.params.DcIdaParam.dc_gdc_da_control_param:type_name -> inner.types.CfGdcDaControlParam
	9,  // 5: inner.params.DcIdaParam.dc_ida_switch_input_block_param:type_name -> inner.types.DcIdaSwitchInputBlockParam
	10, // 6: inner.params.DcIdaParam.dc_ida_query_alert_param:type_name -> inner.types.DcIdaQueryAlertParam
	11, // 7: inner.params.DcIdaResult.error:type_name -> outer.ErrorResult
	12, // 8: inner.params.DcIdaResult.dc_ida_runapp_result:type_name -> inner.types.DcIdaRunAppResult
	13, // 9: inner.params.DcIdaResult.dc_ida_get_system_info_result:type_name -> inner.types.DcIdaGetSystemInfoResult
	14, // 10: inner.params.DcIdaResult.dc_ida_is_port_listening_result:type_name -> inner.types.DcIdaIsPortListeningResult
	15, // 11: inner.params.DcIdaResult.dc_ida_query_profile_result:type_name -> inner.types.DcIdaQueryProfileResult
	16, // 12: inner.params.DcIdaResult.dc_gdc_da_control_result:type_name -> inner.types.CfGdcDaControlResult
	17, // 13: inner.params.DcIdaResult.dc_ida_switch_input_block_result:type_name -> inner.types.DcIdaSwitchInputBlockResult
	18, // 14: inner.params.DcIdaResult.dc_ida_query_alert_result:type_name -> inner.types.DcIdaQueryAlertResult
	0,  // 15: inner.params.DcIdaParamList.params:type_name -> inner.params.DcIdaParam
	1,  // 16: inner.params.DcIdaResultList.results:type_name -> inner.params.DcIdaResult
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_inner_params_dc_ida_proto_init() }
func file_inner_params_dc_ida_proto_init() {
	if File_inner_params_dc_ida_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inner_params_dc_ida_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdaParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inner_params_dc_ida_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inner_params_dc_ida_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdaParamList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inner_params_dc_ida_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdaResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_inner_params_dc_ida_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DcIdaParam_DcIdaRunappParam)(nil),
		(*DcIdaParam_DcIdaGetSystemInfoParam)(nil),
		(*DcIdaParam_DcIdaIsPortListeningParam)(nil),
		(*DcIdaParam_DcIdaQueryProfileParam)(nil),
		(*DcIdaParam_DcGdcDaControlParam)(nil),
		(*DcIdaParam_DcIdaSwitchInputBlockParam)(nil),
		(*DcIdaParam_DcIdaQueryAlertParam)(nil),
	}
	file_inner_params_dc_ida_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DcIdaResult_DcIdaRunappResult)(nil),
		(*DcIdaResult_DcIdaGetSystemInfoResult)(nil),
		(*DcIdaResult_DcIdaIsPortListeningResult)(nil),
		(*DcIdaResult_DcIdaQueryProfileResult)(nil),
		(*DcIdaResult_DcGdcDaControlResult)(nil),
		(*DcIdaResult_DcIdaSwitchInputBlockResult)(nil),
		(*DcIdaResult_DcIdaQueryAlertResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inner_params_dc_ida_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inner_params_dc_ida_proto_goTypes,
		DependencyIndexes: file_inner_params_dc_ida_proto_depIdxs,
		MessageInfos:      file_inner_params_dc_ida_proto_msgTypes,
	}.Build()
	File_inner_params_dc_ida_proto = out.File
	file_inner_params_dc_ida_proto_rawDesc = nil
	file_inner_params_dc_ida_proto_goTypes = nil
	file_inner_params_dc_ida_proto_depIdxs = nil
}
