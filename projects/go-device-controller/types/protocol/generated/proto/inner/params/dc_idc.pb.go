// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: inner/params/dc_idc.proto

package params

import (
	types "go-device-controller/types/protocol/generated/proto/inner/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DcIdcParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*DcIdcParam_DcIdcScanIdsParam
	//	*DcIdcParam_DcIdcOpenGrpcClientParam
	//	*DcIdcParam_DcIdcCheckGrpcHealthParam
	//	*DcIdcParam_DcIdcStartScreenRecordParam
	//	*DcIdcParam_DcIdcStopScreenRecordParam
	Value isDcIdcParam_Value `protobuf_oneof:"value"`
}

func (x *DcIdcParam) Reset() {
	*x = DcIdcParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_idc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdcParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdcParam) ProtoMessage() {}

func (x *DcIdcParam) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_idc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdcParam.ProtoReflect.Descriptor instead.
func (*DcIdcParam) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_idc_proto_rawDescGZIP(), []int{0}
}

func (m *DcIdcParam) GetValue() isDcIdcParam_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DcIdcParam) GetDcIdcScanIdsParam() *types.DcIdcScanIdsParam {
	if x, ok := x.GetValue().(*DcIdcParam_DcIdcScanIdsParam); ok {
		return x.DcIdcScanIdsParam
	}
	return nil
}

func (x *DcIdcParam) GetDcIdcOpenGrpcClientParam() *types.DcIdcOpenGrpcClientParam {
	if x, ok := x.GetValue().(*DcIdcParam_DcIdcOpenGrpcClientParam); ok {
		return x.DcIdcOpenGrpcClientParam
	}
	return nil
}

func (x *DcIdcParam) GetDcIdcCheckGrpcHealthParam() *types.DcIdcCheckGrpcHealthParam {
	if x, ok := x.GetValue().(*DcIdcParam_DcIdcCheckGrpcHealthParam); ok {
		return x.DcIdcCheckGrpcHealthParam
	}
	return nil
}

func (x *DcIdcParam) GetDcIdcStartScreenRecordParam() *types.DcIdcStartScreenRecordParam {
	if x, ok := x.GetValue().(*DcIdcParam_DcIdcStartScreenRecordParam); ok {
		return x.DcIdcStartScreenRecordParam
	}
	return nil
}

func (x *DcIdcParam) GetDcIdcStopScreenRecordParam() *types.DcIdcStopScreenRecordParam {
	if x, ok := x.GetValue().(*DcIdcParam_DcIdcStopScreenRecordParam); ok {
		return x.DcIdcStopScreenRecordParam
	}
	return nil
}

type isDcIdcParam_Value interface {
	isDcIdcParam_Value()
}

type DcIdcParam_DcIdcScanIdsParam struct {
	DcIdcScanIdsParam *types.DcIdcScanIdsParam `protobuf:"bytes,1,opt,name=dc_idc_scan_ids_param,json=dcIdcScanIdsParam,proto3,oneof"`
}

type DcIdcParam_DcIdcOpenGrpcClientParam struct {
	DcIdcOpenGrpcClientParam *types.DcIdcOpenGrpcClientParam `protobuf:"bytes,3,opt,name=dc_idc_open_grpc_client_param,json=dcIdcOpenGrpcClientParam,proto3,oneof"`
}

type DcIdcParam_DcIdcCheckGrpcHealthParam struct {
	DcIdcCheckGrpcHealthParam *types.DcIdcCheckGrpcHealthParam `protobuf:"bytes,4,opt,name=dc_idc_check_grpc_health_param,json=dcIdcCheckGrpcHealthParam,proto3,oneof"`
}

type DcIdcParam_DcIdcStartScreenRecordParam struct {
	DcIdcStartScreenRecordParam *types.DcIdcStartScreenRecordParam `protobuf:"bytes,5,opt,name=dc_idc_start_screen_record_param,json=dcIdcStartScreenRecordParam,proto3,oneof"`
}

type DcIdcParam_DcIdcStopScreenRecordParam struct {
	DcIdcStopScreenRecordParam *types.DcIdcStopScreenRecordParam `protobuf:"bytes,6,opt,name=dc_idc_stop_screen_record_param,json=dcIdcStopScreenRecordParam,proto3,oneof"`
}

func (*DcIdcParam_DcIdcScanIdsParam) isDcIdcParam_Value() {}

func (*DcIdcParam_DcIdcOpenGrpcClientParam) isDcIdcParam_Value() {}

func (*DcIdcParam_DcIdcCheckGrpcHealthParam) isDcIdcParam_Value() {}

func (*DcIdcParam_DcIdcStartScreenRecordParam) isDcIdcParam_Value() {}

func (*DcIdcParam_DcIdcStopScreenRecordParam) isDcIdcParam_Value() {}

type DcIdcResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*DcIdcResult_DcIdcScanIdsResult
	//	*DcIdcResult_DcIdcOpenGrpcClientResult
	//	*DcIdcResult_DcIdcCheckGrpcHealthResult
	//	*DcIdcResult_DcIdcStartScreenRecordResult
	//	*DcIdcResult_DcIdcStopScreenRecordResult
	Value isDcIdcResult_Value `protobuf_oneof:"value"`
}

func (x *DcIdcResult) Reset() {
	*x = DcIdcResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_params_dc_idc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcIdcResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcIdcResult) ProtoMessage() {}

func (x *DcIdcResult) ProtoReflect() protoreflect.Message {
	mi := &file_inner_params_dc_idc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcIdcResult.ProtoReflect.Descriptor instead.
func (*DcIdcResult) Descriptor() ([]byte, []int) {
	return file_inner_params_dc_idc_proto_rawDescGZIP(), []int{1}
}

func (m *DcIdcResult) GetValue() isDcIdcResult_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DcIdcResult) GetDcIdcScanIdsResult() *types.DcIdcScanIdsResult {
	if x, ok := x.GetValue().(*DcIdcResult_DcIdcScanIdsResult); ok {
		return x.DcIdcScanIdsResult
	}
	return nil
}

func (x *DcIdcResult) GetDcIdcOpenGrpcClientResult() *types.DcIdcOpenGrpcClientResult {
	if x, ok := x.GetValue().(*DcIdcResult_DcIdcOpenGrpcClientResult); ok {
		return x.DcIdcOpenGrpcClientResult
	}
	return nil
}

func (x *DcIdcResult) GetDcIdcCheckGrpcHealthResult() *types.DcIdcCheckGrpcHealthResult {
	if x, ok := x.GetValue().(*DcIdcResult_DcIdcCheckGrpcHealthResult); ok {
		return x.DcIdcCheckGrpcHealthResult
	}
	return nil
}

func (x *DcIdcResult) GetDcIdcStartScreenRecordResult() *types.DcIdcStartScreenRecordResult {
	if x, ok := x.GetValue().(*DcIdcResult_DcIdcStartScreenRecordResult); ok {
		return x.DcIdcStartScreenRecordResult
	}
	return nil
}

func (x *DcIdcResult) GetDcIdcStopScreenRecordResult() *types.DcIdcStopScreenRecordResult {
	if x, ok := x.GetValue().(*DcIdcResult_DcIdcStopScreenRecordResult); ok {
		return x.DcIdcStopScreenRecordResult
	}
	return nil
}

type isDcIdcResult_Value interface {
	isDcIdcResult_Value()
}

type DcIdcResult_DcIdcScanIdsResult struct {
	DcIdcScanIdsResult *types.DcIdcScanIdsResult `protobuf:"bytes,1,opt,name=dc_idc_scan_ids_result,json=dcIdcScanIdsResult,proto3,oneof"`
}

type DcIdcResult_DcIdcOpenGrpcClientResult struct {
	DcIdcOpenGrpcClientResult *types.DcIdcOpenGrpcClientResult `protobuf:"bytes,3,opt,name=dc_idc_open_grpc_client_result,json=dcIdcOpenGrpcClientResult,proto3,oneof"`
}

type DcIdcResult_DcIdcCheckGrpcHealthResult struct {
	DcIdcCheckGrpcHealthResult *types.DcIdcCheckGrpcHealthResult `protobuf:"bytes,4,opt,name=dc_idc_check_grpc_health_result,json=dcIdcCheckGrpcHealthResult,proto3,oneof"`
}

type DcIdcResult_DcIdcStartScreenRecordResult struct {
	DcIdcStartScreenRecordResult *types.DcIdcStartScreenRecordResult `protobuf:"bytes,5,opt,name=dc_idc_start_screen_record_result,json=dcIdcStartScreenRecordResult,proto3,oneof"`
}

type DcIdcResult_DcIdcStopScreenRecordResult struct {
	DcIdcStopScreenRecordResult *types.DcIdcStopScreenRecordResult `protobuf:"bytes,6,opt,name=dc_idc_stop_screen_record_result,json=dcIdcStopScreenRecordResult,proto3,oneof"`
}

func (*DcIdcResult_DcIdcScanIdsResult) isDcIdcResult_Value() {}

func (*DcIdcResult_DcIdcOpenGrpcClientResult) isDcIdcResult_Value() {}

func (*DcIdcResult_DcIdcCheckGrpcHealthResult) isDcIdcResult_Value() {}

func (*DcIdcResult_DcIdcStartScreenRecordResult) isDcIdcResult_Value() {}

func (*DcIdcResult_DcIdcStopScreenRecordResult) isDcIdcResult_Value() {}

var File_inner_params_dc_idc_proto protoreflect.FileDescriptor

var file_inner_params_dc_idc_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x64,
	0x63, 0x5f, 0x69, 0x64, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x18, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x04, 0x0a, 0x0a, 0x44, 0x63, 0x49, 0x64, 0x63, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x52, 0x0a, 0x15, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x44, 0x63, 0x49, 0x64, 0x63, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x11, 0x64, 0x63, 0x49, 0x64, 0x63, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x64,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x68, 0x0a, 0x1d, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64,
	0x63, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x18, 0x64, 0x63, 0x49, 0x64, 0x63, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x6b, 0x0a, 0x1e, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x47, 0x72, 0x70, 0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x48, 0x00, 0x52, 0x19, 0x64, 0x63, 0x49, 0x64, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x72,
	0x70, 0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x71, 0x0a,
	0x20, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x1b, 0x64, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x6e, 0x0a, 0x1f, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x6f,
	0x70, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x6f, 0x70, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb3, 0x04, 0x0a, 0x0b, 0x44, 0x63,
	0x49, 0x64, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x16, 0x64, 0x63, 0x5f,
	0x69, 0x64, 0x63, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x53, 0x63, 0x61,
	0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x63,
	0x49, 0x64, 0x63, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x6b, 0x0a, 0x1e, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x4f, 0x70, 0x65, 0x6e,
	0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x19, 0x64, 0x63, 0x49, 0x64, 0x63, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x70,
	0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a,
	0x1f, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47,
	0x72, 0x70, 0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x1a, 0x64, 0x63, 0x49, 0x64, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x72, 0x70,
	0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x74, 0x0a,
	0x21, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x64, 0x63, 0x49, 0x64, 0x63, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x71, 0x0a, 0x20, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x63, 0x5f, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x63, 0x49, 0x64,
	0x63, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x64, 0x63, 0x49, 0x64, 0x63,
	0x53, 0x74, 0x6f, 0x70, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x6c, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x67, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5a, 0x40, 0x67, 0x6f, 0x2d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inner_params_dc_idc_proto_rawDescOnce sync.Once
	file_inner_params_dc_idc_proto_rawDescData = file_inner_params_dc_idc_proto_rawDesc
)

func file_inner_params_dc_idc_proto_rawDescGZIP() []byte {
	file_inner_params_dc_idc_proto_rawDescOnce.Do(func() {
		file_inner_params_dc_idc_proto_rawDescData = protoimpl.X.CompressGZIP(file_inner_params_dc_idc_proto_rawDescData)
	})
	return file_inner_params_dc_idc_proto_rawDescData
}

var file_inner_params_dc_idc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_inner_params_dc_idc_proto_goTypes = []interface{}{
	(*DcIdcParam)(nil),                         // 0: inner.params.DcIdcParam
	(*DcIdcResult)(nil),                        // 1: inner.params.DcIdcResult
	(*types.DcIdcScanIdsParam)(nil),            // 2: inner.types.DcIdcScanIdsParam
	(*types.DcIdcOpenGrpcClientParam)(nil),     // 3: inner.types.DcIdcOpenGrpcClientParam
	(*types.DcIdcCheckGrpcHealthParam)(nil),    // 4: inner.types.DcIdcCheckGrpcHealthParam
	(*types.DcIdcStartScreenRecordParam)(nil),  // 5: inner.types.DcIdcStartScreenRecordParam
	(*types.DcIdcStopScreenRecordParam)(nil),   // 6: inner.types.DcIdcStopScreenRecordParam
	(*types.DcIdcScanIdsResult)(nil),           // 7: inner.types.DcIdcScanIdsResult
	(*types.DcIdcOpenGrpcClientResult)(nil),    // 8: inner.types.DcIdcOpenGrpcClientResult
	(*types.DcIdcCheckGrpcHealthResult)(nil),   // 9: inner.types.DcIdcCheckGrpcHealthResult
	(*types.DcIdcStartScreenRecordResult)(nil), // 10: inner.types.DcIdcStartScreenRecordResult
	(*types.DcIdcStopScreenRecordResult)(nil),  // 11: inner.types.DcIdcStopScreenRecordResult
}
var file_inner_params_dc_idc_proto_depIdxs = []int32{
	2,  // 0: inner.params.DcIdcParam.dc_idc_scan_ids_param:type_name -> inner.types.DcIdcScanIdsParam
	3,  // 1: inner.params.DcIdcParam.dc_idc_open_grpc_client_param:type_name -> inner.types.DcIdcOpenGrpcClientParam
	4,  // 2: inner.params.DcIdcParam.dc_idc_check_grpc_health_param:type_name -> inner.types.DcIdcCheckGrpcHealthParam
	5,  // 3: inner.params.DcIdcParam.dc_idc_start_screen_record_param:type_name -> inner.types.DcIdcStartScreenRecordParam
	6,  // 4: inner.params.DcIdcParam.dc_idc_stop_screen_record_param:type_name -> inner.types.DcIdcStopScreenRecordParam
	7,  // 5: inner.params.DcIdcResult.dc_idc_scan_ids_result:type_name -> inner.types.DcIdcScanIdsResult
	8,  // 6: inner.params.DcIdcResult.dc_idc_open_grpc_client_result:type_name -> inner.types.DcIdcOpenGrpcClientResult
	9,  // 7: inner.params.DcIdcResult.dc_idc_check_grpc_health_result:type_name -> inner.types.DcIdcCheckGrpcHealthResult
	10, // 8: inner.params.DcIdcResult.dc_idc_start_screen_record_result:type_name -> inner.types.DcIdcStartScreenRecordResult
	11, // 9: inner.params.DcIdcResult.dc_idc_stop_screen_record_result:type_name -> inner.types.DcIdcStopScreenRecordResult
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_inner_params_dc_idc_proto_init() }
func file_inner_params_dc_idc_proto_init() {
	if File_inner_params_dc_idc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inner_params_dc_idc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdcParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inner_params_dc_idc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcIdcResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_inner_params_dc_idc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DcIdcParam_DcIdcScanIdsParam)(nil),
		(*DcIdcParam_DcIdcOpenGrpcClientParam)(nil),
		(*DcIdcParam_DcIdcCheckGrpcHealthParam)(nil),
		(*DcIdcParam_DcIdcStartScreenRecordParam)(nil),
		(*DcIdcParam_DcIdcStopScreenRecordParam)(nil),
	}
	file_inner_params_dc_idc_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DcIdcResult_DcIdcScanIdsResult)(nil),
		(*DcIdcResult_DcIdcOpenGrpcClientResult)(nil),
		(*DcIdcResult_DcIdcCheckGrpcHealthResult)(nil),
		(*DcIdcResult_DcIdcStartScreenRecordResult)(nil),
		(*DcIdcResult_DcIdcStopScreenRecordResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inner_params_dc_idc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inner_params_dc_idc_proto_goTypes,
		DependencyIndexes: file_inner_params_dc_idc_proto_depIdxs,
		MessageInfos:      file_inner_params_dc_idc_proto_msgTypes,
	}.Build()
	File_inner_params_dc_idc_proto = out.File
	file_inner_params_dc_idc_proto_rawDesc = nil
	file_inner_params_dc_idc_proto_goTypes = nil
	file_inner_params_dc_idc_proto_depIdxs = nil
}
