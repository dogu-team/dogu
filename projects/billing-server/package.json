{
  "private": true,
  "name": "billing-server",
  "version": "2.1.2",
  "description": "",
  "license": "UNLICENSED",
  "author": "",
  "scripts": {
    "build": "nest build",
    "clean": "shx rm -rf build generated",
    "dev": "cross-env TZ=UTC NODE_ENV=development nodemon --config nodemon.json",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "rebuild": "yarn run clean && yarn run build",
    "start": "cross-env TZ=UTC NODE_ENV=production node -r tsconfig-paths/register -r ts-node/register build/src/main",
    "start:debug": "nest start --debug --watch",
    "start:dev": "nest start --watch",
    "start:pgsql": "yarn run rebuild && cross-env TZ=UTC NODE_ENV=development ts-node scripts/start-pgsql/run.ts",
    "start:prod": "node dist/main",
    "test": "jest",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:watch": "jest --watch",
    "typeorm": "node --require ts-node/register $(yarn bin typeorm)",
    "typeorm:create": "cross-env TZ=UTC NODE_ENV=development ts-node scripts/typeorm/typeorm-create.ts",
    "typeorm:fake": "cross-env TZ=UTC NODE_ENV=development yarn typeorm migration:run -f -d ./src/migration.config.ts",
    "typeorm:generate": "cross-env TZ=UTC NODE_ENV=development ts-node scripts/typeorm/typeorm-generate.ts",
    "typeorm:init": "cross-env TZ=UTC NODE_ENV=development ts-node scripts/typeorm/typeorm-init.ts",
    "typeorm:revert": "yarn run rebuild && cross-env TZ=UTC NODE_ENV=development yarn typeorm migration:revert -d ./src/migration.config.ts",
    "typeorm:run": "yarn run rebuild && cross-env TZ=UTC NODE_ENV=development yarn typeorm migration:run -d ./src/migration.config.ts",
    "typeorm:schema": "cross-env TZ=UTC NODE_ENV=development yarn typeorm schema:sync -d src/migration.config.ts",
    "typeorm:show": "cross-env TZ=UTC NODE_ENV=development yarn typeorm migration:show -d ./src/migration.config.ts"
  },
  "dependencies": {
    "@dogu-dev-private/build-tools": "workspace:^",
    "@dogu-private/console": "workspace:^",
    "@dogu-private/env-tools": "workspace:^",
    "@dogu-private/types": "workspace:^",
    "@dogu-tech/common": "workspace:^",
    "@dogu-tech/env-tools": "workspace:^",
    "@dogu-tech/node": "workspace:^",
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/passport": "9.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/typeorm": "9.0.1",
    "@types/luxon": "3.0.1",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.0",
    "cross-env": "7.0.3",
    "express": "4.18.2",
    "lodash": "4.17.21",
    "luxon": "3.0.4",
    "pg": "8.11.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "typeorm": "0.3.11",
    "uuid": "9.0.0",
    "uuidv4": "6.2.13"
  },
  "devDependencies": {
    "@dogu-private/env-tools": "workspace:^",
    "@dogu-tech/env-tools": "workspace:^",
    "@dogu-tech/node": "workspace:^",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/lodash": "4.14.186",
    "@types/node": "^20.5.9",
    "@types/passport": "1.0.12",
    "@types/pg": "8",
    "@types/shelljs": "0.8.11",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "9.0.1",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "nodemon": "2.0.22",
    "prettier": "^3.0.0",
    "shelljs": "0.8.5",
    "shx": "0.3.4",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
