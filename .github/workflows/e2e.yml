name: ðŸ”„e2e

on:
  workflow_dispatch:

  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  e2e:
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        platform: [Windows, macOS]
        arch: [X64, ARM64]

        exclude:
          - platform: Windows
            arch: ARM64

    runs-on: [e2e, '${{ matrix.platform }}', '${{ matrix.arch }}']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: true

      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Run newbie
        run: |
          yarn run newbie:cicd

      - name: Build Projects
        run: |
          yarn workspace dogu run build

      - name: Newbie nm-space
        run: |
          yarn workspace dogu run newbie:nm-space

      - name: Build nm-space
        run: |
          yarn workspace nm-space run build
        working-directory: ./nm-space

      - name: load credentials
        id: create-json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: 'service-account-key.json'
          json: ${{ secrets.SEVICE_ACCOUNT_KEY_JSON }}

      - name: create dotEnv
        run: |
          yarn run env:e2e

      - name: Run e2e
        if: ${{ success() }}
        run: |
          yarn workspace e2e run start:ci

      - name: Upload video
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: 'e2e-${{ matrix.platform }}-${{ matrix.arch }}'
          path: |
            ./e2e/generated/record/screen-${{ runner.os }}-${{github.sha}}.webm

  send-slack:
    runs-on: ubuntu-latest
    needs: e2e
    if: ${{ always() }}

    steps:
      - name: Send Slack
        uses: dogu-team/slack@v1.0
        with:
          template: 'e2e'
          slack-channel-id: 'C03PL9TC44Q'
          result-status: ${{ needs.e2e.result }}
          ignore-notify: ${{ needs.e2e.result == 'success' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
