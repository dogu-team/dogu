name: ðŸš€release-gcp
run-name: ðŸš€release-gcp-${{github.event.inputs.run_type}}-${{github.event.inputs.project_type}}@${{github.ref_name}}

on:
  workflow_dispatch:
    inputs:
      run_type:
        type: choice
        description: Select run type
        options:
          - development
          - production

      project_type:
        type: choice
        description: Select project type
        options:
          - console-web-front
          - console-web-server

permissions:
  id-token: write
  contents: read

env:
  DOGU_GCP_REGION: asia-northeast3

jobs:
  parse-inputs:
    runs-on: henry-macbook
    outputs:
      GCP_SA_KEY: ${{steps.run-parse-inputs.outputs.GCP_SA_KEY}}
      GCP_PRIVATE_SSH_KEY: ${{steps.run-parse-inputs.outputs.GCP_PRIVATE_SSH_KEY}}
      DOCKER_TAG: ${{steps.run-parse-inputs.outputs.DOCKER_TAG}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: scripts
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - id: run-parse-inputs
        name: Run parse-inputs
        run: |
          node scripts/parse-inputs.mjs
        env:
          DEV_DOCKER_TAG: asia-northeast3-docker.pkg.dev/${{secrets.GCP_DEV_PROJECT_ID}}/projects/${{github.event.inputs.project_type}}:${{github.ref_name}}
          PROD_DOCKER_TAG: asia-northeast3-docker.pkg.dev/${{secrets.GCP_PROD_PROJECT_ID}}/projects/${{github.event.inputs.project_type}}:${{github.ref_name}}
          GCP_DEV_CICD_SA_KEY: ${{secrets.GCP_DEV_CICD_SA_KEY}}
          GCP_PROD_CICD_SA_KEY: 'NEED_TO_SET'
          GCP_DEV_PRIVATE_SSH_KEY: ${{secrets.GCP_DEV_PRIVATE_SSH_KEY}}
          GCP_PROD_PRIVATE_SSH_KEY: 'NEED_TO_SET'
          DOGU_RUN_TYPE: ${{github.event.inputs.run_type}}
          DOGU_PROJECT_TYPE: ${{github.event.inputs.project_type}}

  publish:
    needs: parse-inputs
    runs-on: henry-macbook

    steps:
      - name: Print inputs
        run: |
          echo "$GCP_SA_KEY" > $HOME/1.txt
          echo "$GCP_PRIVATE_SSH_KEY" > $HOME/2.txt
          echo "$DOCKER_TAG" > $HOME/3.txt
        env:
          GCP_SA_KEY: ${{needs.parse-inputs.outputs.GCP_SA_KEY}}
          GCP_PRIVATE_SSH_KEY: ${{needs.parse-inputs.outputs.GCP_PRIVATE_SSH_KEY}}
          DOCKER_TAG: ${{needs.parse-inputs.outputs.DOCKER_TAG}}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Yarn Unplugged
        uses: actions/cache@v3
        id: cache_yarn_unplugged
        env:
          cache-name: cache-yarn-unplugged
        with:
          path: ${{github.workspace}}/.yarn/unplugged
          key: ${{runner.os}}-${{env.cache-name}}-${{hashFiles('yarn.lock')}}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - id: auth
        name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: access_token
          credentials_json: '${{env.GCP_CICD_SA_KEY}}'
          access_token_lifetime: 300s
        env:
          GCP_CICD_SA_KEY: ${{needs.parse-inputs.outputs.GCP_SA_KEY}}

      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: ${{env.DOGU_GCP_REGION}}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{steps.auth.outputs.access_token}}

      - name: Push to Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{needs.parse-inputs.outputs.DOCKER_TAG}}
          file: dockerfile.gcp
          build-args: DOGU_RUN_TYPE=${{github.event.inputs.run_type}}
          target: ${{github.event.inputs.project_type}}

  release:
    runs-on: ubuntu-latest
    needs:
      - parse-inputs
      - publish

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: docker-compose-gcp.yml
          clean: true

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{needs.parse-inputs.outputs.GCP_SA_KEY}}'

      - name: Rlease to Google Cloud Compute Engine
        uses: 'google-github-actions/ssh-compute@v0'
        with:
          instance_name: ${{github.event.inputs.project_type}}
          zone: ${{env.DOGU_GCP_REGION}}-a
          ssh_private_key: '${{needs.parse-inputs.outputs.GCP_PRIVATE_SSH_KEY}}'
          command: |
            gcloud auth configure-docker ${{env.DOGU_GCP_REGION}}-docker.pkg.dev --quiet && \
            docker ps -qa | xargs -r docker rm -f && \
            docker system prune --volumes -a -f && \
            docker pull ${{needs.parse-inputs.outputs.DOCKER_TAG}} && \
            DOGU_DOCKER_TAG=${{needs.parse-inputs.outputs.DOCKER_TAG}} docker compose -f docker-compose-gcp.yml --verbose up -d ${{github.event.inputs.project_type}} && \
            docker image prune -a -f

  send-slack:
    runs-on: ubuntu-latest
    needs: release
    if: ${{always()}}

    steps:
      - name: Send Slack
        uses: dogu-team/slack@v1.0
        with:
          template: 'CD'
          slack-channel-id: 'C057ML9UH34'
          result-status: ${{needs.release.result}}
          ignore-notify: false
        env:
          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
