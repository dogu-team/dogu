name: ðŸš€release-init-self-hosted-dogu
run-name: ðŸš€release-init-self-hosted-dogu-${{ github.event.inputs.version }}
on:
  workflow_dispatch:
    inputs:
      rc_check:
        type: boolean
        description: RC
      version:
        type: string
        description: 'dogu image version'
        default: ''
jobs:
  input_validation:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.input_validation.outputs.tag }}

    steps:
      - id: input_validation
        name: input validation
        run: |
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          NC='\033[0m' 
          echo "rc_check is ${{ github.event.inputs.rc_check }}"
          echo "version is ${{ github.event.inputs.version }}"
          rc_check=${{ github.event.inputs.rc_check }}
          version=${{ github.event.inputs.version }}
          if [ "$rc_check" = "true" ] && [ -n "$version" ]; then
            echo -e "${RED}Skipping because rc_check is true and version is not empty${NC}"
            exit 1
          elif [ "$rc_check" = "false" ] && [ -z "$version" ]; then
            echo -e "${RED}Skipping because rc_check is false and version is empty${NC}"
            exit 1
          else
            if [ "$rc_check" = "true" ]; then
              image_path="dogutechio/dogu-rc:rc"
              echo "tag=${image_path}" >> "$GITHUB_OUTPUT"
              echo -e "${GREEN} dogu image tag is ${image_path}${NC}"
            else
              image_path="dogutechio/dogu:$version"
              echo "tag=${image_path}" >> "$GITHUB_OUTPUT"
              echo -e "${GREEN} dogu image tag is ${image_path}${NC}"
            fi
            echo -e "${GREEN} input validation successful${NC}"
          fi

  start-rc-dogu:
    needs: input_validation
    runs-on: self-hosted-dogu

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dogu-team/dogu
          token: ${{ secrets.DOGU_GITHUB_TOKEN }}
          path: .
          sparse-checkout: |
            docker-compose.yml
            docker-compose.env

      - name: docker init
        run: |
          docker ps -qa | xargs -r docker rm -f
          docker system prune --volumes -a -f
          sudo rm -rf /var/lib/dogu
          sudo mkdir /var/lib/dogu
          sudo mkdir /var/lib/dogu/nexus-data
          sudo chown 200 -R /var/lib/dogu/nexus-data

      - name: set .env
        run: |
          sed -i "s|dogutechio/.*$|${{needs.input_validation.outputs.tag}}|" ./docker-compose.yml
          sed -i "s|DOGU_HOST=.*$|DOGU_HOST=${{ secrets.SELF_HOSTED_DOGU_HOST }}|" ./docker-compose.env
          sed -i "s|DOGU_CONSOLE_URL=.*$|DOGU_CONSOLE_URL=http://${{ secrets.SELF_HOSTED_DOGU_HOST }}:3001|" ./docker-compose.env

      - name: run
        run: |
          docker ps -qa | xargs -r docker rm -f
          docker pull ${{needs.input_validation.outputs.tag}}
          docker compose -f ./docker-compose.yml --env-file ./docker-compose.env --verbose up -d
