name: build-dost-ghrunner

on:
  workflow_dispatch:

  push:
    branches: ['main']
    paths:
      - 'prebuilds/protocol-exporter/**.proto'
      - 'packages/typescript-dev-private/build-tools/**'
      - 'projects/go-device-controller/**'
      - 'projects/ios-device-agent/**'
      - 'projects/android-device-agent/**'
      - 'nm-space/projects/dost/**'
  pull_request:
    branches: ['main']

env:
  YARN_CHECKSUM_BEHAVIOR: update yarn

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        runner: [windows-2019, macos-latest]
    runs-on: ['${{ matrix.runner }}']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: false
          fetch-depth: 0

      - name: Windows - Msys2 - MIGW64 - Setup for cgo
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          msystem: MINGW64
          location: ${{ github.workspace }}
          install: >-
            git
            base-devel
            mingw-w64-x86_64-gcc

      - name: Windows - Setup Cmake
        if: runner.os == 'Windows'
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.25.1
          ninjaVersion: 1.11.1

      - name: Macos - Setup Cmake,
        if: runner.os == 'macOS'
        run: brew install cmake
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        continue-on-error: true

      - name: Install the Apple certificate and provisioning profile
        if: runner.os == 'macOS'
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.DOGU_MACOS_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.DOGU_MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.DOGU_MACOS_WILDCARD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.DOGU_MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Common - Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.4'

      - name: Common - Set up JDK 11 for android build
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Common - Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Newbie
        run: |
          yarn run newbie:cicd

      - name: Build Projects
        run: |
          yarn workspace dogu run build:packages

      - name: Download, Build third-party
        run: |
          yarn third-party:download:build

      - name: Dost - Newbie nm-space
        run: |
          yarn workspace dogu run newbie:nm-space

      - name: Dost - Install nm-space
        run: |
          yarn install
        working-directory: ./nm-space
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: create dotEnv development
        run: |
          env-generator gen-all development

      - name: Dost - Set productName
        run: |
          yarn util:set-productname Dost-ci-development && yarn
        working-directory: ./nm-space/projects/dost
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: Dost - Set version 0.0.1
        run: |
          yarn util:set-version 0.0.1
        working-directory: ./nm-space/projects/dost

      - name: Dost - Build
        run: |
          yarn run build && yarn run deploy:notarize:upload
        working-directory: ./nm-space/projects/dost

      - name: create dotEnv self-hosted
        run: |
          env-generator gen-all self-hosted

      - name: Dost - Set productName
        run: |
          yarn util:set-productname Dost && yarn
        working-directory: ./nm-space/projects/dost
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: Dost - Set version 0.0.1
        run: |
          yarn util:set-version 1.0.0
        working-directory: ./nm-space/projects/dost

      - name: Dost - Build
        run: |
          yarn run build && yarn run deploy:notarize:upload
        working-directory: ./nm-space/projects/dost

      - name: Clean up keychain and provisioning profile
        if: ${{ always() && runner.os == 'macOS' }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

  send-slack:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ always() }}

    steps:
      - name: Send Slack
        uses: dogu-team/slack@v1.0
        with:
          template: 'CI'
          slack-channel-id: 'C03PL9TC44Q'
          result-status: ${{ needs.build.result }}
          ignore-notify: ${{ needs.build.result == 'success' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
