version: '3.7'

services:
  redis:
    container_name: dogu-redis
    image: redis:7.0.7
    restart: always
    pull_policy: always
    ports:
      - 6379:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - console_network

  influxdb:
    container_name: dogu-influxdb
    image: influxdb:2.6.1
    restart: always
    pull_policy: always
    ports:
      - 8086:8086
    volumes:
      - ${VOLUME_PATH}/influxdb-volume:/var/lib/influxdb2:rw
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_DB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_DB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_DB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_DB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUX_DB_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_DB_INIT_ADMIN_TOKEN}
    networks:
      - console_network

  postgres:
    container_name: dogu-postgres
    image: postgres:15.3
    restart: always
    pull_policy: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: 'console_web'
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${VOLUME_PATH}/postgresql:/var/lib/postgresql/data
    networks:
      - console_network

  coturn:
    container_name: dogu-coturn
    image: coturn/coturn:4.5.2
    restart: always
    pull_policy: always
    ports:
      - 3478:3478/tcp
      - 3478:3478/udp
      - 5349:5349/tcp
      - 5349:5349/udp
      - 49160-49170:49160-49170/udp
    command: >
      --log-file=stdout
      --min-port=49160
      --max-port=55000
      --total-quota=100
      --user=${TURN_SERVER_USERNAME}:${TURN_SERVER_PASSWORD}
      --realm=${DOGU_HOST}
      --listening-port=3478
      --tls-listening-port=5349
      --verbose
      --fingerprint
      --lt-cred-mech
      --stale-nonce
      --no-sslv3
      --no-tlsv1
      --no-multicast-peers
      --server-relay
      --listening-ip=0.0.0.0
    networks:
      - console_network

  nexus:
    container_name: dogu-nexus
    image: sonatype/nexus3:3.56.0
    restart: always
    pull_policy: always
    ports:
      - 8081:8081
    volumes:
      - ${VOLUME_PATH}/nexus-data:/nexus-data
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - console_network

  console:
    container_name: dogu-console
    image: dogutechio/dogu:2.0.0
    restart: always
    depends_on:
      - influxdb
      - redis
      - postgres
      - coturn
      - nexus
    ports:
      - '3001:3001'
      - '4000:4000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOGU_API_BASE_URL=http://${DOGU_HOST}:4000
      - DOGU_NEXUS_USERNAME=${FILE_SERVER_USERNAME}
      - DOGU_NEXUS_PASSWORD=${FILE_SERVER_PASSWORD}
      - DOGU_NEXUS_HOST=${DOGU_HOST}
      - DOGU_RDS_HOST=postgres
      - DOGU_RDS_USERNAME=${POSTGRES_USER}
      - DOGU_RDS_PASSWORD=${POSTGRES_PASSWORD}
      - DOGU_INFLUX_DB_HOST=influxdb
      - DOGU_INFLUX_DB_TOKEN=${INFLUX_DB_INIT_ADMIN_TOKEN}
      - DOGU_INFLUX_DB_ORG=${INFLUX_DB_INIT_ORG}
      - DOGU_INFLUX_DB_BUCKET=${INFLUX_DB_INIT_BUCKET}
      - DOGU_REDIS_HOST=redis
      - DOGU_REDIS_PASSWORD=${REDIS_PASSWORD}
      - DOGU_CONSOLE_DOMAIN=${DOGU_HOST}
      - DOGU_CONSOLE_URL=${DOGU_CONSOLE_URL}
      - DOGU_SECRET=${DOGU_CONSOLE_JWT_SECRET_KEY}
      - DOGU_LICENSE_SERVER_URL=https://api-client-admin.dogutech.io
      - NEXT_PUBLIC_TURN_SERVER_USERNAME=${TURN_SERVER_USERNAME}
      - NEXT_PUBLIC_TURN_SERVER_PASSWORD=${TURN_SERVER_PASSWORD}
      - NEXT_PUBLIC_DOGU_API_BASE_URL=http://${DOGU_HOST}:4000
      - NEXT_PUBLIC_DOGU_WS_BASE_URL=ws://${DOGU_HOST}:4000
      - NEXT_PUBLIC_TURN_SERVER_HOST=${DOGU_HOST}
      - NEXT_PUBLIC_FILE_SERVER_HOST=${DOGU_HOST}
      - NEXT_PUBLIC_ENV=self-hosted
    networks:
      - console_network

networks:
  console_network:
    driver: bridge
