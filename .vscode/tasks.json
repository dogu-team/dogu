{
  "tasks": [
    /*************************************************************************
      build
     *************************************************************************/
    {
      "type": "npm",
      "script": "build",
      "label": "Build: all",
      "group": {
        "kind": "build"
      },
      "problemMatcher": []
    },

    {
      "label": "Build: all and nm-space",
      "type": "shell",
      "dependsOrder": "sequence",
      "dependsOn": ["Build: all", "Newbie: NM Space"],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "type": "npm",
      "script": "build:packages",
      "label": "Build: packages",
      "group": {
        "kind": "build"
      },
      "problemMatcher": [],
      "presentation": {
        "group": "buildWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "build:archive",
      "label": "Build: android-device-agent",
      "path": "projects/android-device-agent",
      "problemMatcher": [],
      "presentation": {
        "group": "buildWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "build:archive",
      "label": "Build: go-device-controller",
      "path": "projects/go-device-controller",
      "problemMatcher": [],
      "presentation": {
        "group": "buildWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "rebuild",
      "label": "Rebuild: typescript/types",
      "path": "packages/typescript/types",
      "problemMatcher": [],
      "presentation": {
        "group": "exportWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "rebuild",
      "label": "Rebuild: typescript/gamium-protocol",
      "path": "packages/typescript/gamium-protocol",
      "problemMatcher": [],
      "presentation": {
        "group": "exportWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    /*************************************************************************
      dev
     *************************************************************************/
    {
      "type": "npm",
      "script": "dev:next",
      "label": "Dev: CDN console-desktop-app:Next",
      "path": "projects/console-desktop-app",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "dev:electron",
      "label": "Dev: CDE console-desktop-app:Electron",
      "path": "projects/console-desktop-app",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "dev",
      "label": "Dev: CF console-web-front",
      "path": "projects/console-web-front",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "dev",
      "label": "Dev: CB console-web-server",
      "path": "projects/console-web-server",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "dev",
      "label": "Dev: HA host-agent",
      "path": "projects/host-agent",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "dev",
      "label": "Dev: Docs",
      "path": "docs",
      "problemMatcher": [],
      "presentation": {
        "group": "docsWatchers",
        "close": false,
        "panel": "dedicated"
      }
    },
    {
      "type": "npm",
      "script": "dev:ko",
      "label": "Dev: Docs:ko",
      "path": "docs",
      "problemMatcher": [],
      "presentation": {
        "group": "docsWatchers",
        "close": false,
        "panel": "dedicated"
      }
    },
    {
      "label": "Dev: Docs All",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "parallel",
      "dependsOn": ["Dev: Docs", "Dev: Docs:ko"]
    },
    {
      "type": "npm",
      "script": "dev",
      "label": "Dev: DS device-server",
      "path": "projects/device-server",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "label": "Dev: Dost",
      "type": "npm",
      "script": "dev",
      "path": "nm-space/projects/dost",
      "problemMatcher": [],
      "dependsOn": ["Newbie: NM Space"],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "label": "Dev: Build: Dost",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Build: packages", "Dev: Dost"]
    },
    {
      "label": "Dev: Server All",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "parallel",
      "dependsOn": ["Dev: CF console-web-front", "Dev: CB console-web-server", "Dev: Dost"]
    },
    {
      "label": "Dev: Local DB All",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "parallel",
      "dependsOn": ["Dev: pgsql", "Dev: redis"]
    },
    {
      "label": "Dev: Local All",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Dev: Server All"]
    },
    /*************************************************************************
      local db
     *************************************************************************/
    {
      "type": "npm",
      "script": "start:pgsql",
      "label": "Dev: pgsql",
      "path": "projects/console-web-server",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "start:redis",
      "label": "Dev: redis",
      "path": "projects/console-web-server",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    /*************************************************************************
      Newbie
     *************************************************************************/

    {
      "type": "npm",
      "script": "newbie:nm-space",
      "label": "Newbie: NM Space",
      "path": ".",
      "problemMatcher": [],
      "presentation": {
        "group": "devWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    /*************************************************************************
      Watch
     *************************************************************************/
    {
      "type": "npm",
      "script": "watch",
      "label": "Watch: packages",
      "path": "",
      "problemMatcher": [],
      "presentation": {
        "group": "packagesWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "type": "npm",
      "script": "mirror:nm",
      "label": "Watch: mirror to nm-space",
      "path": "",
      "problemMatcher": [],
      "presentation": {
        "group": "packagesWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "label": "Watch: packages and mirror to nm-space",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "parallel",
      "dependsOn": ["Watch: packages", "Watch: mirror to nm-space"]
    },
    /*************************************************************************
      Export
     *************************************************************************/
    {
      "type": "npm",
      "script": "export",
      "label": "Export: PE protocol-exporter",
      "path": "prebuilds/protocol-exporter",
      "problemMatcher": [],
      "presentation": {
        "group": "exportWatchers",
        "close": false,
        "panel": "shared"
      }
    },

    {
      "label": "Export: protocol-exporter, reload",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Export: PE protocol-exporter", "Rebuild: typescript/types", "workbench.action.reloadWindow"]
    },
    {
      "type": "npm",
      "script": "export",
      "label": "Export: FE flatbuffer-exporter",
      "path": "prebuilds/flatbuffer-exporter",
      "problemMatcher": [],
      "presentation": {
        "group": "exportWatchers",
        "close": false,
        "panel": "shared"
      }
    },
    {
      "label": "Export: flatbuffer-exporter, reload",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Export: FE flatbuffer-exporter", "Rebuild: typescript/gamium-protocol", "workbench.action.reloadWindow"]
    },
    /*************************************************************************
      Task
     *************************************************************************/
    {
      "label": "Terminate task",
      "type": "shell",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["workbench.action.tasks.terminate"]
    },
    {
      "label": "workbench.action.reloadWindow",
      "command": "${command:workbench.action.reloadWindow}",
      "type": "shell",
      "problemMatcher": []
    },
    {
      "label": "workbench.action.tasks.terminate",
      "command": "${command:workbench.action.tasks.terminate}",
      "type": "shell",
      "problemMatcher": []
    },

    /*************************************************************************
      Debug
     *************************************************************************/
    {
      "label": "Debug: CB console-web-server(1)",
      "command": "${command:extension.js-debug.createDebuggerTerminal}",
      "problemMatcher": []
    },
    {
      "label": "Debug: CB console-web-server(2)",
      "command": "${input:console-web-server-dev}",
      "problemMatcher": []
    },
    {
      "label": "Debug: CB console-web-server",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Debug: CB console-web-server(1)", "Debug: CB console-web-server(2)"]
    },
    {
      "label": "Debug: Dost(1)",
      "command": "${command:extension.js-debug.createDebuggerTerminal}",
      "problemMatcher": []
    },
    {
      "label": "Debug: Dost(2)",
      "command": "${input:dost-dev}",
      "problemMatcher": []
    },
    {
      "label": "Debug: Dost",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Debug: Dost(1)", "Debug: Dost(2)"]
    },
    {
      "label": "Debug: DS device-server(1)",
      "command": "${command:extension.js-debug.createDebuggerTerminal}",
      "problemMatcher": []
    },
    {
      "label": "Debug: DS device-server(2)",
      "command": "${input:device-server-dev}",
      "problemMatcher": []
    },
    {
      "label": "Debug: DS device-server",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Debug: DS device-server(1)", "Debug: DS device-server(2)"]
    },
    {
      "label": "Debug: HA host-agent(1)",
      "command": "${command:extension.js-debug.createDebuggerTerminal}",
      "problemMatcher": []
    },
    {
      "label": "Debug: HA host-agent(2)",
      "command": "${input:host-agent-dev}",
      "problemMatcher": []
    },
    {
      "label": "Debug: HA host-agent",
      "problemMatcher": [],
      "dependsOrder": "sequence",
      "dependsOn": ["Debug: HA host-agent(1)", "Debug: HA host-agent(2)"]
    }
  ],
  "inputs": [
    {
      "id": "reload",
      "type": "command",
      "command": "workbench.action.reloadWindow"
    },
    {
      "id": "console-web-server-dev",
      "type": "command",
      "command": "workbench.action.terminal.sendSequence",
      "args": {
        "text": "cd  ${workspaceFolder}/projects/console-web-server && yarn dev\u000a"
      }
    },
    {
      "id": "dost-dev",
      "type": "command",
      "command": "workbench.action.terminal.sendSequence",
      "args": {
        "text": "cd  ${workspaceFolder}/nm-space/projects/dost && yarn dev\u000a"
      }
    },
    {
      "id": "device-server-dev",
      "type": "command",
      "command": "workbench.action.terminal.sendSequence",
      "args": {
        "text": "cd  ${workspaceFolder}/projects/device-server && yarn dev\u000a"
      }
    },
    {
      "id": "host-agent-dev",
      "type": "command",
      "command": "workbench.action.terminal.sendSequence",
      "args": {
        "text": "cd  ${workspaceFolder}/projects/host-agent && yarn dev\u000a"
      }
    }
  ]
}
