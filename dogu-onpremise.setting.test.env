DOGU_HOST=13.125.129.16 # needs to be set to the public IP or hostname of your Dogu server. (required)

INFLUX_DB_INIT_BUCKET=dogu # influxdb bucket (default: dogu)
INFLUX_DB_INIT_ORG=dogu # influxdb org (default: dogu)
INFLUX_DB_INIT_ADMIN_TOKEN=dogu-onprem # influxdb token (default: dogu-onprem)
INFLUX_DB_USERNAME=admin
INFLUX_DB_PASSWORD=dogu-onprem # influxdb password (default: dogu-onprem)
# INFLUX_DB_RETENTION=     # needs to be set to a valid duration, e.g. 1w.  (default: never)

REDIS_PASSWORD=dogu-onprem # redis password (default: dogu-onprem)

POSTGRES_USER=admin     # postgres user id (default: admin)
POSTGRES_PASSWORD=dogu-onprem # postgres password (default: dogu-onprem)

DOGU_CONSOLE_JWT_SECRET_KEY=dogu # console jwt secret key (default: dogu)

DEVICE_WIFI_SSID=Dogu_5g  # wifi ssid of the device (required)
DEVICE_WIFI_PASSWORD=20220702 # wifi password of the device (required)

FILE_SERVER_USERNAME=admin # file server username (default: admin)
FILE_SERVER_PASSWORD=dogu-onprem # file server password (default: dogu-onprem)

GITLAB_ROOT_ACCESS_TOKEN=glpat-UkAbpRVwLvB2BsUBfXsU # gitlab root token. create gitlab access token and paste it here. (required)
GITLAB_ROOT_PASSWORD=dogu-onprem # gitlab root password. (default: dogu-onprem)

VOLUME_PATH=/var/lib/dogu # path to the volume (default: /var/lib/dogu)

TURN_SERVER_USERNAME=admin
TURN_SERVER_PASSWORD=dogu-onprem





# scp -i "dev.pem" /Users/devkyun/Desktop/dev/dogu-saas/dogu-saas/dogu/docker-compose.yml ubuntu@ec2-13-125-129-16.ap-northeast-2.compute.amazonaws.com:/home/ubuntu/
# scp -i "dev.pem" /Users/devkyun/Desktop/dev/dogu-saas/dogu-saas/dogu/dogu-onpremise.setting.test.env ubuntu@ec2-13-125-129-16.ap-northeast-2.compute.amazonaws.com:/home/ubuntu/
# docker compose -f ./docker-compose.yml --env-file ./dogu-onpremise.setting.test.env up -d

# docker compose -f ./docker-compose.onpremise.yml down


# sudo mkdir /var/lib/dogu
# sudo mkdir /var/lib/dogu/nexus-data
# sudo chown 200 -R /var/lib/dogu/nexus-data

# docker rm -f $(docker ps -qa)
# docker system prune --volumes -f -a
